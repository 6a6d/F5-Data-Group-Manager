{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/devices/devices.component.css","webpack:///./src/app/devices/devices.component.html","webpack:///./src/app/devices/devices.component.ts","webpack:///./src/app/getgrpby-url/getgrpby-url.component.css","webpack:///./src/app/getgrpby-url/getgrpby-url.component.html","webpack:///./src/app/getgrpby-url/getgrpby-url.component.ts","webpack:///./src/app/product-add/product-add.component.css","webpack:///./src/app/product-add/product-add.component.html","webpack:///./src/app/product-add/product-add.component.ts","webpack:///./src/app/product-detail/product-detail.component.css","webpack:///./src/app/product-detail/product-detail.component.html","webpack:///./src/app/product-detail/product-detail.component.ts","webpack:///./src/app/product-edit/product-edit.component.css","webpack:///./src/app/product-edit/product-edit.component.html","webpack:///./src/app/product-edit/product-edit.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/record-details/record-details.component.css","webpack:///./src/app/record-details/record-details.component.html","webpack:///./src/app/record-details/record-details.component.ts","webpack:///./src/app/records/records.component.css","webpack:///./src/app/records/records.component.html","webpack:///./src/app/records/records.component.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACY;AAOtD;IAEE,sBAA2B,YAAmB;QAAnB,iBAAY,GAAZ,YAAY,CAAO;QAD9C,UAAK,GAAG,8BAA8B,CAAC;IACY,CAAC;IAEpD,+BAAQ,GAAR;QACC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAChC,CAAC;IAEM,+BAAQ,GAAf,UAAiB,QAAgB;QAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;IACzC,CAAC;IAVU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGyC,+DAAK;OAFnC,YAAY,CAWxB;IAAD,mBAAC;CAAA;AAXwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACe;AACD;AACV;AAEE;AACgB;AACoB;AACN;AACH;AACX;AACoB;AAC7B;AACF;AACW;AACR;AACwB;AAChB;AACc;AACpB;AACE;AACE;AAG7D,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,2EAAgB;QAC3B,IAAI,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE;KAChC;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,+FAAsB;QACjC,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE;KACjC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,sFAAmB;QAC9B,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;KAC7B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,4EAAgB;QAC3B,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE;KACjC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,yFAAoB;QAC/B,IAAI,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE;KAC9B;IACD;QACE,IAAI,EAAE,oCAAoC;QAC1C,SAAS,EAAE,gGAAsB;QACjC,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;KACnC;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,4EAAgB;QAC3B,IAAI,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;KAC/B;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,0FAAoB;QAC/B,IAAI,EAAE,EAAE,KAAK,EAAE,4BAA4B,EAAE;KAC9C;CACF,CAAC;AA+BF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,+FAAsB;gBACtB,yFAAoB;gBACpB,sFAAmB;gBACnB,4EAAgB;gBAChB,gGAAsB;gBACtB,4EAAgB;gBAChB,0FAAoB;aACrB;YACD,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,0DAAW;gBACX,uEAAa;gBACb,qEAAgB;gBAChB,qEAAkB;gBAClB,iEAAc;gBACd,+EAAkB;gBAClB,uEAAc;gBACd,yEAAe;gBACf,2EAAgB;gBAChB,yEAAe;gBACf,6FAAuB;aACxB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACtGqB;AACJ;AAOvC;IAgCE;QA9BQ,kBAAa,GAAG,IAAI,oDAAe,CAAC,YAAY,CAAC,CAAC;QAC1D,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAE3C,cAAS,GAAG,IAAI,oDAAe,CAAC,WAAW,CAAC,CAAC;QACrD,iBAAY,GAAI,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAElD,+BAA+B;QACvB,cAAS,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QACpC,cAAS,GAAG,IAAI,oDAAe,CAAC,OAAO,CAAC,CAAC;QAEjD,2CAA2C;QAC3C,YAAO,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QAClC,sBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAEhD,wCAAwC;QACxC,iBAAY,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QACvC,uBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAEtD,2CAA2C;QAC3C,gBAAW,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAC5C,eAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAE3C,YAAO,GAAE,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QACjC,eAAU,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAEzC,qDAAqD;QAC7C,gBAAW,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QAC9C,eAAU,GAAE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAG5B,CAAC;IAEjB,mCAAa,GAAb,UAAc,OAAe;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;IAClC,CAAC;IAED,oCAAc,GAAd,UAAe,OAAe;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAED,gCAAU,GAAV,UAAW,GAAQ;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;IACzB,CAAC;IAED,qDAAqD;IACrD,oCAAc,GAAd,UAAe,IAAI;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;IAC5B,CAAC;IACA,kCAAY,GAAZ,UAAa,GAAW;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IAEF,0DAA0D;IACzD,gCAAU,GAAV,UAAW,GAAG;QACX,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;IACzB,CAAC;IAED,wDAAwD;IACxD,qCAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IAlES,WAAW;QAJvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OAEW,WAAW,CAoEvB;IAAD,kBAAC;CAAA;AApEuB;;;;;;;;;;;;ACRxB,4EAA4E,sBAAsB,0BAA0B,eAAe,gBAAgB,GAAG,gBAAgB,uBAAuB,oBAAoB,2BAA2B,iBAAiB,oBAAoB,kBAAkB,uBAAuB,iBAAiB,GAAG,sBAAsB,mBAAmB,2BAA2B,eAAe,GAAG,eAAe,kBAAkB,0BAA0B,uBAAuB,mBAAmB,iBAAiB,iBAAiB,GAAG,qBAAqB,kBAAkB,GAAG,gBAAgB,oBAAoB,0BAA0B,uBAAuB,0BAA0B,gBAAgB,iBAAiB,GAAG,oBAAoB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,oBAAoB,sBAAsB,uBAAuB,+BAA+B,GAAG,mBAAmB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,oBAAoB,qBAAqB,uBAAuB,+BAA+B,GAAG,UAAU,2BAA2B,iBAAiB,sBAAsB,uBAAuB,oBAAoB,iBAAiB,uBAAuB,GAAG,gBAAgB,8BAA8B,GAAG,iBAAiB,uBAAuB,gBAAgB,eAAe,sCAAsC,iBAAiB,GAAG,G;;;;;;;;;;;ACAvuD,oKAAoK,MAAM,MAAM,MAAM,8DAA8D,kDAAkD,MAAM,MAAM,MAAM,wDAAwD,6CAA6C,MAAM,MAAM,MAAM,gIAAgI,MAAM,MAAM,MAAM,otBAAotB,OAAO,2EAA2E,aAAa,uCAAuC,aAAa,GAAG,gBAAgB,oCAAoC,KAAK,8CAA8C,iBAAiB,aAAa,aAAa,gCAAgC,aAAa,6CAA6C,iBAAiB,gBAAgB,gLAAgL,oJAAoJ,oFAAoF,mCAAmC,yLAAyL,iIAAiI,2BAA2B,SAAS,uEAAuE,aAAa,qEAAqE,KAAK,8CAA8C,iBAAiB,UAAU,cAAc,kFAAkF,iBAAiB,YAAY,qCAAqC,+JAA+J,oMAAoM,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApoG;AACzD,kDAAkD;AAClD,6CAA6C;AACmB;AAClB;AACW;AACX;AACb;AACjC,wCAAwC;AAQxC;IAYE,0BAAoB,KAAqB,EAAU,MAAc,EAAU,IAAiB,EAAS,IAAgB;QAAjG,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAS,SAAI,GAAJ,IAAI,CAAY;QAX5G,YAAO,GAAG,EAAE,QAAQ,EAAC,EAAE,EAAE,CAAC;QAC1B,cAAS,GAAG;YACf,IAAI,EAAC,EAAE;YACP,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,cAAc;YACtB,SAAS,EAAE,QAAQ;YACnB,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,EAAE;SACX,CAAC;QAKP,iBAAY,GAAW,KAAK,CAAC;QAC7B,YAAO,GAAO,EAAE,CAAC;QACjB,0HAA0H;QAC1H,gBAAW,GAAQ,EAAE,CAAC;QACtB,uCAAuC;QACvC,qBAAgB,GAAK,EAAE,CAAC;QACxB,eAAU,GAAO,EAAE,CAAC;QACpB,WAAM,GAAO,EAAE,CAAC;QAChB,gBAAW,GAAW,EAAE,CAAC;QACzB,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,KAAK,CAAC;QACzB,4BAAuB,GAAO,EAAE,CAAC;QACjC,mBAAc,GAAO,EAAE,CAAC;QACxB,gBAAW,GAAS,EAAE,CAAC;QACvB,OAAE,GAAQ,EAAE,CAAC;QAEb,UAAK,GAAG,kCAAkC,CAAC;QAC3C,YAAO,GAAG,iBAAiB;QAC3B,mBAAc,GAAW,KAAK,CAAC;IApB0F,CAAC;IAsB1H,mCAAQ,GAAR;QAAA,iBAgBC;QAfE,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QACzC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACjD,mCAAmC;QAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAG5B,gCAAgC;QAChC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAO;YACrC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAExB,CAAC,CAAC;QACF,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACjC,CAAC;IACN,CAAC;IAED,kCAAO,GAAP,UAAQ,IAAI,EAAE,IAAI;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,oCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAE,WAAW,CAAC,CAAC;IAC5B,CAAC;IAED,yCAAc,GAAd,UAAe,CAAC,EAAE,IAAI;QAAtB,iBAgCC;QA/BC,OAAO,CAAC,GAAG,CAAE,wBAAwB,CAAC,CAAC;QACvC,kDAAkD;QAClD,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,OAAW;YACxD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YACpC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAC,2BAA2B,CAAC;YAEjE,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,EAAE,kEAAM,CAAC,CAAC,SAAS,CAAC,iBAAO;gBAC5D,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBACrC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAC,2BAA2B,CAAC;YAC/D,CAAC,EAAE,UAAC,GAAG;gBACN,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAC,uBAAuB,CAAC;gBAC/D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QAEJ,CAAC,EACD,UAAC,GAAG;YACA,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAC,uBAAuB,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAE1D,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,EAAE,kEAAM,CAAC,CAAC,SAAS,CAAC,iBAAO;gBAC5D,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBACrC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAC,2BAA2B,CAAC;YAC/D,CAAC,EAAE,UAAC,GAAG;gBACN,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAC,uBAAuB,CAAC;gBAC/D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACP,CAAC,CAEE,CAAC;IAEJ,CAAC;IAED,sCAAW,GAAX;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,sCAAW,GAAX;QACO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,2CAAgB,GAAhB;QACC,IAAI,CAAC,YAAY,GAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QACrC,2CAA2C;IAC5C,CAAC;IAGD,2CAAgB,GAAhB,UAAiB,CAAC,EAAE,GAAG,EAAE,IAAI;QAA7B,iBAqBC;QAnBC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,KAAU;YAC5D,wBAAwB;YACxB,2DAA2D;YAC3D,gCAAgC;YAChC,oCAAoC;YACpC,uBAAuB;YACvB,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC5B,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAClC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC/C,KAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC;YACrC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1D,gCAAgC;QAClC,CAAC,EAAE,UAAC,GAAG;YACD,KAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7D,CAAC,CACJ,CAAC;IACJ,CAAC;IAGD,kCAAO,GAAP,UAAQ,CAAC;QACR,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC/E,CAAC;IAID,yCAAc,GAAd,UAAe,CAAC;QAAhB,iBAOC;QANA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAC7F,KAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC;QACxC,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEL,CAAC;IAGD,mCAAQ,GAAR,UAAS,QAAkB;QAA3B,iBAaC;QAZC,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,UAAU,GAAe,IAAI,UAAU,EAAE,CAAC;QAC9C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,UAAU,CAAC,SAAS,GAAG,UAAC,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC;YACrC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnC,GAAG,CAAC,MAAM,GAAC,IAAI,CAAC,IAAI,CAAC;YACtB,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,CAAC;QACD,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,uCAAY,GAAZ,UAAa,GAAG;QAAhB,iBAWC;QATC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAC,GAAG,EAAE,GAAG,CAAC;aAChC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,EAAE,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACvB,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAC,GAAG,CAAC,CAAC;YACpD,KAAI,CAAC,EAAE,GAAC,EAAE,CAAC;QACb,CAAC,CACF,CAAC;IACN,CAAC;IAGD,yCAAc,GAAd,UAAe,GAAG;QAAlB,iBAcC;QAZC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAC,GAAG,EAAE,GAAG,CAAC;aAClC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,MAAM,GAAC,GAAG,CAAC;YACjB,KAAI,CAAC,UAAU,GAAC,KAAI,CAAC,MAAM,CAAC;YACxB,2CAA2C;QAE9C,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,MAAM,GAAC,EAAE,CAAC;QACjB,CAAC,CACF,CAAC;IAEN,CAAC;IAED,8CAAmB,GAAnB,UAAoB,GAAG;QAAvB,iBAkBC;QAhBC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAC,GAAG,EAAE,GAAG,CAAC;aAClC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,WAAW,GAAC,GAAG,CAAC;YACrB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,GAAC,OAAO;oBAChC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,GAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAE;gBAC7E,0GAA0G;YAC3G,CAAC;QAGD,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IAEN,CAAC;IAED,wCAAa,GAAb,UAAc,CAAC;QAAf,iBA8BC;QA7BA,IAAI,IAAI,GAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,KAAU;YACjF,IAAI,IAAI,GAAG,oDAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;YACpD,IAAI,UAAU,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAE,qBAAqB,EAAE,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAE;;gBAG/D,IAAI,GAAC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1D,EAAE,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;oBACtB,IAAI,GAAC,GAAC,CAAC,CAAC;oBACR,IAAI,OAAK,GAAC,IAAI,CAAC;oBACf,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAK,EAAE,KAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,KAAU;wBAC5F,IAAI,GAAG,oDAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAChD,IAAI,KAAK,GAAE,CAAC,IAAI,KAAG,UAAU,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,2BAA2B,CAAC;wBACnF,OAAO,CAAC,IAAI,CAAE,cAAc,EAAE,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAC,CAAC,EAAE,OAAK,EAAE,KAAK,CAAC,CAAC;oBACxE,CAAC,EAAE,UAAC,GAAG;wBACL,OAAO,CAAC,GAAG,CAAC,mDAAmD,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAK,EAAE,GAAG,CAAC,CAAC;wBACtG,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBAC/B,CAAC,CAAC,CAAC;gBACX,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAG,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACzE,CAAC;YACD,CAAC;YAhBD,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;aAgBxC;QAER,CAAC,EAAE,UAAC,GAAG;YACJ,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAC,IAAI,EAAE,GAAG,EAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC5G,CAAC,CAED,CAAC;IACH,CAAC;IA1PQ;QAAR,2DAAK,EAAE;;qDAA2B;IAC1B;QAAR,2DAAK,EAAE;;uDAOD;IATI,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAa2B,8DAAc,EAAkB,sDAAM,EAAgB,yDAAW,EAAc,yDAAW;OAZ1G,gBAAgB,CA6P5B;IAAD,uBAAC;CAAA;AA7P4B;;;;;;;;;;;;AChB7B,mB;;;;;;;;;;;ACAA,8PAA8P,MAAM,MAAM,MAAM,iG;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvN;AACX;AACW;AACX;AAQ9C;IAGE,8BAAmB,IAAgB,EAAU,KAAqB,EAAU,MAAc,EAAU,IAAiB;QAAlG,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAF5G,YAAO,GAAG,EAAE,GAAG,EAAC,EAAE,EAAE,CAAC;QAI9B,YAAO,GAAO,EAAE,CAAC;IAFyG,CAAC;IAG3H,uCAAQ,GAAR;QAAA,iBAEC;QADG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC;IACtE,CAAC;IAED,yCAAU,GAAV;QAAA,iBAeC;QAdC,IAAM,GAAG,GAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE1C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;aAC/C,SAAS,CAAC,aAAG;YACX,GAAG,CAAC,MAAM,GAAC,KAAK,CAAC;YACjB,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CACF,CAAC;IAEN,CAAC;IAED,uCAAQ,GAAR,UAAS,GAAG;QACT,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,EACpC,YAAY,GAAG,EAAE,EACjB,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACtB,8BAA8B;QAC9B,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,iCAAiC;QACjC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtD,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;YACnC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9B,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;QACD,MAAM,CAAC;YACH,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,MAAM,CAAC,IAAI;SACpB,CAAC;IACN,CAAC;IAhDS;QAAR,2DAAK,EAAE;;yDAAsB;IADnB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAIwB,yDAAW,EAAiB,8DAAc,EAAkB,sDAAM,EAAgB,yDAAW;OAH1G,oBAAoB,CAmDhC;IAAD,2BAAC;CAAA;AAnDgC;;;;;;;;;;;;ACXjC,4EAA4E,sBAAsB,0BAA0B,eAAe,gBAAgB,GAAG,gBAAgB,uBAAuB,oBAAoB,2BAA2B,iBAAiB,oBAAoB,kBAAkB,uBAAuB,GAAG,sBAAsB,mBAAmB,2BAA2B,eAAe,GAAG,eAAe,gBAAgB,0BAA0B,uBAAuB,mBAAmB,iBAAiB,GAAG,qBAAqB,kBAAkB,GAAG,oBAAoB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,oBAAoB,sBAAsB,uBAAuB,+BAA+B,GAAG,UAAU,2BAA2B,iBAAiB,sBAAsB,uBAAuB,oBAAoB,iBAAiB,uBAAuB,GAAG,gBAAgB,8BAA8B,GAAG,iBAAiB,uBAAuB,gBAAgB,eAAe,sCAAsC,iBAAiB,GAAG,G;;;;;;;;;;;ACAjuC,srB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACX;AACW;AACX;AAS9C;IAIE,6BAAmB,IAAgB,EAAU,KAAqB,EAAU,MAAc,EAAU,IAAiB;QAAlG,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAHvH,OAAE,GAAK,EAAE,CAAC;QACC,cAAS,GAAG,EAAE,IAAI,EAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;IAEqD,CAAC;IAE1H,sCAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,EAAE,GAAG,EAAE,EAAZ,CAAY,CAAC,CAAC;IACrD,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAChG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAdQ;QAAR,2DAAK,EAAE;;0DAA4D;IAFzD,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAMwB,yDAAW,EAAiB,8DAAc,EAAkB,sDAAM,EAAgB,yDAAW;OAJ1G,mBAAmB,CAkB/B;IAAD,0BAAC;CAAA;AAlB+B;;;;;;;;;;;;ACZhC,4EAA4E,sBAAsB,0BAA0B,eAAe,gBAAgB,GAAG,gBAAgB,uBAAuB,oBAAoB,2BAA2B,iBAAiB,oBAAoB,kBAAkB,uBAAuB,GAAG,sBAAsB,mBAAmB,2BAA2B,eAAe,GAAG,eAAe,gBAAgB,0BAA0B,uBAAuB,mBAAmB,iBAAiB,GAAG,qBAAqB,kBAAkB,GAAG,oBAAoB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,oBAAoB,sBAAsB,uBAAuB,+BAA+B,GAAG,UAAU,2BAA2B,iBAAiB,sBAAsB,uBAAuB,oBAAoB,iBAAiB,uBAAuB,GAAG,gBAAgB,8BAA8B,GAAG,iBAAiB,uBAAuB,gBAAgB,eAAe,sCAAsC,iBAAiB,GAAG,G;;;;;;;;;;;ACAjuC,oEAAoE,wBAAwB,kEAAkE,YAAY,gDAAgD,YAAY,+CAA+C,2BAA2B,+DAA+D,YAAY,mD;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzU;AACJ;AACW;AAOzD;IAIE,gCAAmB,IAAgB,EAAU,KAAqB,EAAU,MAAc;QAAvE,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE/F,yCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAQ;YAChF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAXU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAKwB,yDAAW,EAAiB,8DAAc,EAAkB,sDAAM;OAJ/E,sBAAsB,CAalC;IAAD,6BAAC;CAAA;AAbkC;;;;;;;;;;;;ACTnC,mB;;;;;;;;;;;ACAA,wY;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACX;AACW;AAOzD;IAIE,8BAAmB,IAAgB,EAAU,KAAqB,EAAU,MAAc;QAAvE,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFjF,gBAAW,GAAO,EAAE,SAAS,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAC,CAAC,EAAE,CAAC;IAEoB,CAAC;IAE/F,uCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAQ;YAChF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAC3F,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,GAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAjBQ;QAAR,2DAAK,EAAE;;6DAAkE;IAF/D,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAKwB,yDAAW,EAAiB,8DAAc,EAAkB,sDAAM;OAJ/E,oBAAoB,CAqBhC;IAAD,2BAAC;CAAA;AArBgC;;;;;;;;;;;;ACTjC,4EAA4E,sBAAsB,0BAA0B,eAAe,gBAAgB,GAAG,gBAAgB,uBAAuB,oBAAoB,2BAA2B,iBAAiB,oBAAoB,kBAAkB,uBAAuB,iBAAiB,GAAG,sBAAsB,mBAAmB,2BAA2B,eAAe,GAAG,eAAe,gBAAgB,0BAA0B,uBAAuB,mBAAmB,iBAAiB,iBAAiB,GAAG,qBAAqB,kBAAkB,GAAG,oBAAoB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,oBAAoB,sBAAsB,uBAAuB,+BAA+B,GAAG,UAAU,2BAA2B,iBAAiB,sBAAsB,uBAAuB,oBAAoB,iBAAiB,uBAAuB,GAAG,gBAAgB,8BAA8B,GAAG,iBAAiB,uBAAuB,gBAAgB,eAAe,sCAAsC,iBAAiB,GAAG,G;;;;;;;;;;;ACAnwC,uJAAuJ,MAAM,MAAM,MAAM,2GAA2G,MAAM,MAAM,MAAM,qKAAqK,aAAa,wEAAwE,KAAK,UAAU,QAAQ,0HAA0H,sI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/nB;AACJ;AACW;AACX;AAO9C;IAQE,0BAAmB,IAAgB,EAAU,KAAqB,EAAU,MAAc,EAAU,IAAiB;QAAlG,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QANrH,aAAQ,GAAO,EAAE,CAAC;QAClB,WAAM,GAAO,EAAE,CAAC;QAChB,SAAI,GAAO,EAAE,CAAC;QACd,YAAO,GAAO,EAAE,CAAC;QACjB,OAAE,GAAM,EAAE,CAAC;IAE8G,CAAC;IAE1H,mCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,EAAE,GAAG,EAAE,EAAZ,CAAY,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,sCAAW,GAAX;QAAA,iBAYC;QAXC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAM,KAAK,GAAG,yBAAyB,CAAC;QACxC,qBAAqB;QACrB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACtE,0BAA0B;YAE1B,mFAAmF;YAEnF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAgB,GAAhB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,8BAAG,GAAH;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACvD,CAAC;IAEA,kCAAO,GAAP,UAAQ,SAAS;QAChB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,iCAAM,GAAN,UAAO,IAAI;QAAX,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;aACnD,SAAS,CAAC,aAAG;YACV,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;IAtDU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCASwB,yDAAW,EAAiB,8DAAc,EAAkB,sDAAM,EAAgB,yDAAW;OAR1G,gBAAgB,CAwD5B;IAAD,uBAAC;CAAA;AAxD4B;;;;;;;;;;;;ACV7B,mB;;;;;;;;;;;ACAA,mKAAmK,sLAAsL,4QAA4Q,gBAAgB,mBAAmB,uHAAuH,qHAAqH,yGAAyG,WAAW,WAAW,cAAc,a;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx8B;AACX;AACW;AAEX;AAS9C;IASE,gCAAmB,IAAgB,EAAU,KAAqB,EAAU,MAAc,EAAU,IAAiB;QAAlG,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QARrH,cAAS,GAAK,EAAE,CAAC;QACjB,UAAK,GAAK,EAAE,CAAC;QACb,iBAAY,GAAQ,EAAE,CAAC;QACvB,cAAS,GAAQ,EAAE,CAAC;QACpB,OAAE,GAAK,EAAE,CAAC;QAED,eAAU,GAAO,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IAEyE,CAAC;IAE3H,yCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAExD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,sBAAY,IAAI,YAAI,CAAC,YAAY,GAAG,YAAY,EAAhC,CAAgC,CAAC;IACtF,CAAC;IAED,uCAAM,GAAN,UAAO,KAAK,EAAE,IAAI;QAAlB,iBAWC;QATC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC;aAC9C,SAAS,CAAC,aAAG;YACV,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;YACxD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CACF,CAAC;IACN,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,uCAAM,GAAN,UAAO,EAAE;QAAT,iBAcC;QAbC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAChF,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACxC,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC,EAAE,IAAE,QAAQ,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAI,EAAE,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,KAAK,EAAE,KAAI,CAAC,KAAK,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YACzE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjD,CAAC;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IA5CQ;QAAR,2DAAK,EAAE;;8DAAyC;IAPtC,sBAAsB;QAPlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAYwB,yDAAW,EAAiB,8DAAc,EAAkB,sDAAM,EAAgB,yDAAW;OAT1G,sBAAsB,CAqDlC;IAAD,6BAAC;CAAA;AArDkC;;;;;;;;;;;;ACbnC,4EAA4E,sBAAsB,0BAA0B,eAAe,iBAAiB,GAAG,gBAAgB,uBAAuB,oBAAoB,2BAA2B,iBAAiB,oBAAoB,kBAAkB,uBAAuB,iBAAiB,GAAG,sBAAsB,mBAAmB,2BAA2B,eAAe,GAAG,eAAe,gBAAgB,0BAA0B,uBAAuB,mBAAmB,iBAAiB,iBAAiB,GAAG,qBAAqB,kBAAkB,GAAG,oBAAoB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,oBAAoB,sBAAsB,uBAAuB,+BAA+B,GAAG,UAAU,2BAA2B,iBAAiB,sBAAsB,uBAAuB,oBAAoB,iBAAiB,uBAAuB,GAAG,gBAAgB,8BAA8B,GAAG,iBAAiB,uBAAuB,gBAAgB,eAAe,sCAAsC,iBAAiB,GAAG,SAAS,eAAe,GAAG,mBAAmB,oBAAoB,gBAAgB,GAAG,sBAAsB,kBAAkB,kCAAkC,sBAAsB,GAAG,UAAU,eAAe,GAAG,2DAA2D,wBAAwB,GAAG,4DAA4D,wBAAwB,GAAG,2BAA2B,2BAA2B,GAAG,2EAA2E,oBAAoB,kBAAkB,iBAAiB,mBAAmB,eAAe,GAAG,SAAS,iBAAiB,GAAG,sBAAsB,gBAAgB,uBAAuB,GAAG,kDAAkD,sBAAsB,GAAG,iCAAiC,oCAAoC,GAAG,gCAAgC,mCAAmC,GAAG,G;;;;;;;;;;;ACA3pE,6OAA6O,MAAM,qIAAqI,MAAM,iGAAiG,MAAM,wGAAwG,MAAM,wCAAwC,gBAAgB,aAAa,MAAM,mCAAmC,gCAAgC,UAAU,aAAa,MAAM,2PAA2P,MAAM,MAAM,MAAM,MAAM,+FAA+F,MAAM,MAAM,MAAM,MAAM,iGAAiG,SAAS,gBAAgB,MAAM,MAAM,MAAM,MAAM,oGAAoG,MAAM,MAAM,MAAM,MAAM,iBAAiB,UAAU,gHAAgH,+NAA+N,KAAK,0EAA0E,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,wCAAwC,wIAAwI,mdAAmd,eAAe,+NAA+N,cAAc,qNAAqN,gBAAgB,8IAA8I,iCAAiC,8DAA8D,0PAA0P,yLAAyL,4SAA4S,0PAA0P,8KAA8K,yLAAyL,2CAA2C,yEAAyE,WAAW,eAAe,cAAc,kCAAkC,wBAAwB,oxBAAoxB,UAAU,mRAAmR,UAAU,6IAA6I,QAAQ,2BAA2B,2JAA2J,2BAA2B,qN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArmM;AAC9B;AACW;AAEjB;AACiB;AACV;AACY;AAGuB;AAC5C;AACgB;AAER;AAyB9C;IAkBE,0BAAoB,IAAgB,EAAU,IAAgB,EAAU,KAAqB,EAAU,MAAc,EAAU,IAAiB;QAA5H,SAAI,GAAJ,IAAI,CAAY;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAhBvI,eAAU,GAAO,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAE3D,UAAK,GAAK,EAAE,CAAC;QACb,iBAAY,GAAQ,WAAW,CAAC;QAEhC,qBAAgB,GAAa,CAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAG/C,2BAAsB,GAAG,CAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC7C,iBAAY,GAAmB,EAAE,CAAE;QASnC,YAAO,GAAO,EAAE,CAAC;QACjB,eAAU,GAAO,EAAE,CAAC;QACpB,WAAM,GAAU,EAAE,CAAC;QACnB,eAAU,GAAW,KAAK,CAAC;QAC3B,gBAAW,GAAU,EAAE,CAAC;QACxB,mBAAc,GAAO,EAAE,CAAC;QACxB,kBAAa,GAAU,EAAE,CAAC;QAC1B,kBAAa,GAAW,KAAK,CAAC;QAC9B,iBAAY,GAAO,EAAE,CAAC;QACtB,aAAQ,GAAO,EAAE,CAAC;QAClB,cAAS,GAAO,EAAE,CAAC;QACnB,iBAAY,GAAU,EAAE,CAAC;QACzB,cAAS,GAAU,EAAE,CAAC;QACtB,gBAAW,GAAU,EAAE,CAAC;QACxB,uCAAuC;QACvC,qBAAgB,GAAK,EAAE,CAAC;QACxB,OAAE,GAAK,EAAE,CAAC;IAlB0I,CAAC;IAuBrJ,mCAAQ,GAAR;QAAA,iBA8CC;QA5CC,+EAA+E;QAC/E,sFAAsF;QACtF,wDAAwD;QACxD,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,oBAAU,IAAI,YAAI,CAAC,UAAU,GAAG,UAAU,EAA5B,CAA4B,CAAC,CAAC;QAClF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,0BAAgB,IAAI,YAAI,CAAC,gBAAgB,GAAG,gBAAgB,EAAxC,CAAwC,CAAC,CAAC;QAErG,uCAAuC;QACvC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,EAAE,GAAG,EAAE,EAAZ,CAAY,CAAC,CAAC;QAEnD,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAO;YACrC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC;QAEF,yDAAyD;QACzD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAE,CAAC;QAGhE,gFAAgF;QAChF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qBAAW,IAAI,YAAI,CAAC,WAAW,GAAG,WAAW,EAA9B,CAA8B,CAAE,CAAC;QAC/E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;QAGtC,EAAE,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAE,CAAC,CAAC,CAAC;YACvD,2BAA2B;YAC/B,IAAI,IAAI,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAE;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;YAC1B,yCAAyC;YACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC/D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,sBAAY,IAAI,YAAI,CAAC,YAAY,GAAG,YAAY,EAAhC,CAAgC,CAAC;IAEtF,CAAC;IAED,uCAAY,GAAZ,UAAa,GAAG;QAAhB,iBAUC;QARC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAC,GAAG,EAAE,GAAG,CAAC;aAChC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,EAAE,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtB,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAC,GAAG,CAAC,CAAC;YACpD,KAAI,CAAC,EAAE,GAAC,EAAE,CAAC;QACb,CAAC,CACF,CAAC;IACN,CAAC;IAGD,qCAAU,GAAV;QAAA,iBAkBC;QAhBC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACpG,YAAY;YACZ,OAAO,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC;YAC9B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,8BAA8B;YAC9B,0CAA0C;YAC3C,KAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtD,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YAEjC,gCAAgC;QAClC,CAAC,EAAE,UAAC,GAAG;YACD,KAAI,CAAC,YAAY,GAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC,CACJ,CAAC;IACJ,CAAC;IAGD,iCAAM,GAAN,UAAO,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE;QACrC,sCAAsC;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,GAAG,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,GAAC,KAAK,CAAC;QAC9B,4BAA4B;QAC1B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAGD,sCAAW,GAAX,UAAY,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE;QAA5C,iBAiFC;QAhFE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAE3E,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAQ,CAAC,CAAC,CAAC;YAC5B;;;;;;oBAMQ;YAEJ,uFAAuF;YACvF,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAE,SAAS,CAAC,CAAC,CAAC;gBACvD,IAAI,MAAI,GAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;oBAChB,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,MAAI,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;wBAClE,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;wBACxD,KAAI,CAAC,UAAU,EAAE,CAAC;wBAClB,OAAO,CAAC,GAAG,CAAE,uBAAuB,EAAE,KAAI,CAAC,aAAa,EAAE,MAAI,EAAG,iBAAiB,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;wBACzG,EAAE,CAAC,CAAC,EAAE,IAAE,QAAQ,CAAC,CAAC,CAAC;4BACf,KAAI,CAAC,UAAU,CAAC,IAAI,GAAI,EAAE,CAAC;4BAC3B,KAAI,CAAC,YAAY,GAAC,KAAK,CAAC;4BAC1B,yEAAyE;wBAC3E,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,iDAAiD;4BAC/C,KAAI,CAAC,YAAY,GAAC,EAAE,CAAC;wBACzB,CAAC;oBACL,CAAC,EAAE,UAAC,GAAG;wBACH,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAI,EAAE,KAAK,EAAE,KAAI,CAAC,aAAa,EAAG,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAC,CAAC,CAAC;wBAChH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,MAAI,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;wBACrE,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;wBACrD,OAAO,CAAC,GAAG,CAAE,uBAAuB,EAAE,KAAI,CAAC,aAAa,EAAE,MAAI,CAAC,CAAC;oBACpE,CAAC,EAAE,UAAC,GAAG;wBACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAI,EAAE,KAAK,EAAE,KAAI,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAC,CAAC,CAAC;wBACxG,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;gBACP,CAAC;;oBAGK,IAAI,MAAI,GAAC,OAAK,gBAAgB,CAAC,OAAK,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,MAAI,CAAC,CAAC;oBACpC,EAAE,CAAC,CAAC,MAAI,IAAE,SAAS,CAAC,CAAC,CAAC;wBAClB,OAAK,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,OAAK,UAAU,EAAE,MAAI,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;4BACpE,OAAO,CAAC,GAAG,CAAE,yBAAyB,EAAE,MAAI,CAAC,CAAC;wBAChD,CAAC,EAAE,UAAC,GAAG;4BACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAI,EAAE,KAAK,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAG,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAC,CAAC,CAAC;4BACpH,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBAC/B,CAAC,CAAC,CAAC;oBACP,CAAC;gBACP,CAAC;;gBAZD,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC;;iBAYjC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,qCAAqC,EAAE,SAAS,EAAE,EAAE,EAAC,CAAC,CAAC;gBACxJ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAClE,CAAC;QAEL,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,EAAE,CAAC,CAAC,EAAE,IAAE,KAAK,IAAI,EAAE,IAAE,QAAQ,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,GAAG,EAAE,MAAM,EAAC,KAAK,EAAC,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,EAAE,CAAC,CAAC,EAAE,IAAE,QAAQ,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,EAAE,CAAC;oBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,EAAE,CAAC;oBACxB,IAAI,CAAC,YAAY,GAAC,EAAE,CAAC;gBACvB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAE,QAAQ,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,GAAC,KAAK,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAG,QAAQ,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACtD,CAAC;QACL,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;MAuBE;IAGF,oCAAS,GAAT,UAAW,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG,IAAI;QAC5C,IAAI,IAAI,GAAC,EAAE,CAAC;QACZ,EAAE,CAAC,CAAC,SAAS,IAAE,KAAK,IAAI,SAAS,IAAE,QAAQ,CAAC,CAAC,CAAC;YAC1C,IAAI,GAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAE,SAAS,IAAE,QAAQ,CAAC,CAAC,CAAC;YAC9B,IAAI,GAAC,MAAM,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,GAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QACjC,CAAC;QAED,IAAI,GAAG,GAAK,EAAE,CAAC;QACf,EAAE,CAAC,CAAC,SAAS,IAAE,MAAM,IAAI,SAAS,IAAE,MAAM,CAAC,CAAC,CAAC;YACzC,GAAG,GAAG,EAAE,SAAS,EAAC,KAAK,EAAG,MAAM,EAAC,iBAAiB,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC;QAChF,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,GAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;YAC1C,oCAAoC;YACpC,IAAI,WAAW,GAAG,CAAC,IAAI,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAI,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,WAAW,GAAE,MAAM,CAAC,IAAI,GAAE,UAAU;YAExG,GAAG,GAAG,EAAE,SAAS,EAAC,KAAK,EAAG,MAAM,EAAC,iBAAiB,EAAE,aAAa,EAAE,IAAI,GAAE,UAAU,GAAG,SAAS,GAAG,QAAQ,GAAE,MAAM,CAAC,IAAI,GAAG,WAAW,EAAE,CAAC;QAC5I,CAAC;QACD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACvC,wCAAwC;gBACpC,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QAEF,IAAI,QAAQ,GAAC,qBAAqB,CAAC;QAEnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAG,WAAW,CAAC,CAAC,IAAI,CACtE,0DAAG,CAAC,WAAC;YACH,qDAAqD;QAEvD,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,UAAU,GAAG,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CACrE,CAAC;IACJ,CAAC;IAID,8BAAG,GAAH,UAAI,SAAS;QACT,wEAAwE;QACxE,sBAAsB;IAC1B,CAAC;IAED,uCAAY,GAAZ,UAAa,SAAS,EAAG,OAAO,EAAE,QAAQ;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,QAAQ,EAAE,SAAS,EAAG,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,iCAAM,GAAN,UAAO,KAAK,EAAE,IAAI;QAAlB,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC;aAC9C,SAAS,CAAC,aAAG;YACV,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,GAAC,iCAAiC,CAAC;QACtD,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;IAED,qCAAU,GAAV;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,CAAC,YAAY,IAAI,2BAA2B,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,MAAM,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAEF;;;;;;;OAOG;IAEF,4CAAiB,GAAjB;QACE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC5D,IAAI,GAAG,GAAO,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;QAGrB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,CAAC,YAAY,IAAI,2BAA2B,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;QAEtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,gBAAgB,CAAC;YAIpC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3C,GAAG,GAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,8DAA8D;gBAC9D,0BAA0B;gBACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;gBAC9B,yCAAyC;gBAC5C,GAAG;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAED,6CAAkB,GAAlB,UAAmB,KAAU;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;QAE5B,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEjD,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAE,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;QACzB,CAAC;IACJ,CAAC;IAED,oCAAS,GAAT;QAEE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7B,iCAAiC;YACjC,IAAI,IAAI,GAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YACnD,sDAAsD;YACtD,EAAE,CAAC,CAAC,IAAI,IAAE,SAAS,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;oBAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAClC,CAAC,EAAE,UAAC,GAAG;oBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;YAEX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,oBAAoB,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC,CAAC;YACpJ,CAAC;QACH,CAAC;IACL,CAAC;IAID,mCAAQ,GAAR,UAAU,KAAK,EAAE,IAAI;QAArB,iBA2BC;QA1BC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,QAAQ,GAAC,IAAI,CAAC,EAAE;gBACjC,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QACF,IAAI,GAAG,GAAK,EAAE,CAAC;QACf,GAAG,CAAC,IAAI,GAAC,KAAK,CAAC,IAAI,CAAC;QACpB,GAAG,CAAC,IAAI,GAAC,KAAK,CAAC,IAAI,CAAC;QACpB,GAAG,CAAC,SAAS,GAAC,KAAK,CAAC,SAAS,CAAC;QAC9B,oCAAoC;QACpC,GAAG,CAAC,OAAO,GAAC,KAAK,CAAC,OAAO,CAAC;QAE1B,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACpC,0CAA0C;QAC1C,+EAA+E;QAE/E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,mCAAmC,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,IAAI,CAC3F,0DAAG,CAAC,UAAC,KAAK;YACR,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,iBAAiB,EAAC,CAAC,CAAC;YAC7H,KAAI,CAAC,oBAAoB,GAAO,KAAI,CAAC,YAAY,QAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,KAAK,CAAC,IAAI,EAAG,KAAK,EAAE,IAAI,EAAE,eAAe,EAAE,KAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,CAAE;QACpL,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,iBAAiB,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CACvE,CAAC;IACJ,CAAC;IAGD,sCAAW,GAAX,UAAgB,SAAuB,EAAE,KAAK,EAAE,IAAI,EAAE,MAAU;QAAhE,iBAgBC;QAhBe,mDAAuB;QACrC,MAAM,CAAC,UAAC,KAAU;YAEhB,wDAAwD;YACxD,+DAA+D;YAC/D,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,8DAA8D;YAC9D,6DAA6D;YAE7D,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC;YACpI,KAAI,CAAC,oBAAoB,GAAO,KAAI,CAAC,YAAY,QAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAE,cAAc,EAAE,KAAI,CAAC,oBAAoB,CAAC,CAAC;YAExD,yDAAyD;YACzD,MAAM,CAAC,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;IAEN,sCAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IAnbQ;QAAR,2DAAK,EAAE;;wDAAmD;IAYvC;QAAnB,+DAAS,CAAC,8DAAO,CAAC;kCAAO,8DAAO;kDAAC;IACT;QAAxB,+DAAS,CAAC,wEAAY,CAAC;kCAAY,wEAAY;uDAAC;IAftC,gBAAgB;QAR5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;YAEvB,aAAa,EAAE,+DAAiB,CAAC,IAAI;;SAEtC,CAAC;yCAqB0B,+DAAU,EAAe,yDAAW,EAAiB,8DAAc,EAAkB,sDAAM,EAAgB,yDAAW;OAlBrI,gBAAgB,CAub5B;IAAD,uBAAC;CAAA;AAvb4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCc;AACuC;AAChC;AACI;AAGtD,IAAM,QAAQ,GAAG,WAAW,CAAC;AAC7B,IAAM,SAAS,GAAG,UAAU,CAAC;AAC7B,IAAM,KAAK,GAAG,0BAA0B,CAAC;AACzC,IAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,IAAI,EAAE,GAAG,kBAAkB,CAAC;AAG5B,0DAA0D;AAE1D,yBAAyB;AAEzB,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,QAAQ,GAAC,EAAE;QAC5B,QAAQ,EAAE,EAAE;KACb,CAAC;CACH,CAAC;AAOF;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEhC,iCAAW,GAAnB,UAAoB,GAAa;QAC/B,IAAI,IAAI,GAAG,GAAG,CAAC;QACf,MAAM,CAAC,IAAI,IAAI,EAAG,CAAC;IACrB,CAAC;IAID,iCAAW,GAAX,UAAY,KAAK,EAAE,IAAI,EAAE,EAAE;QAEzB,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,EAAG,WAAW,CAAC,CAAC,IAAI,CACvD,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,mCAAa,GAAb,UAAc,GAAG,EAAE,GAAG;QACpB,IAAM,UAAU,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,QAAQ,EAAE,GAAG;aACd,CAAC;SACH,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAG,UAAU,CAAC,CAAC,IAAI,CACzC,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE,EAAE,IAAI,EAAE,EAAE;QACrB,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACrC,iCAAiC;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QAEN,OAAO,CAAC,GAAG,CAAC,OAAO,EAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC,IAAI,CACvE,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,UAAC,GAAQ;YAClB,MAAM,CAAC,uDAAU,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,kCAAY,GAAZ,UAAc,KAAK,EAAE,IAAI,EAAG,EAAE;QAE5B,IAAI,SAAS,GAAG,EAAC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,aAAa,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;QAC5G,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,iBAAiB,GAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC;QAE/F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,QAAQ,GAAG,iBAAiB,GAAG,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CACjH,0DAAG,CAAC,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,uBAAqB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAG,CAAC,EAA9D,CAA8D,CAAC,EAC9E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAChD,CAAC;IACJ,CAAC;IAED,8BAAQ,GAAR,UAAU,KAAK,EAAE,IAAI,EAAE,EAAE;QACvB,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC9B,IAAI,SAAS,GAAG,EAAC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;QAEjF,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,aAAa,GAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC;QAE3F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,QAAQ,GAAG,aAAa,GAAG,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAC7G,0DAAG,CAAC,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,uBAAqB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAG,CAAC,EAA9D,CAA8D,CAAC,EAC9E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAChD,CAAC;IACJ,CAAC;IAID,mCAAa,GAAb,UAAe,EAAE,EAAE,OAAO;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,WAAW,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAC1F,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,wBAAsB,EAAI,CAAC,EAAvC,CAAuC,CAAC,EACjD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,eAAe,CAAC,CAAC,CACnD,CAAC;IACJ,CAAC;IAGD,kCAAY,GAAZ,UAAc,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;QACxC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QACF,IAAI,MAAM,GAAG,EAAE,SAAS,EAAC,KAAK,EAAG,MAAM,EAAC,iBAAiB,EAAE,aAAa,EAAE,gBAAgB,GAAG,SAAS,GAAG,QAAQ,GAAC,OAAO,GAAC,OAAO,EAAE,CAAC;QACpI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,EAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAG,WAAW,CAAC,CAAC,IAAI,CACrF,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,uBAAqB,OAAS,CAAC,EAA3C,CAA2C,CAAC,EACrD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,eAAe,CAAC,CAAC,CACnD,CAAC;IACJ,CAAC;IAED,+BAAS,GAAT,UAAW,SAAS,EAAE,SAAS,EAAE,MAAM;QACrC,IAAI,IAAI,GAAG,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QACjD,IAAI,GAAG,GAAG,EAAE,SAAS,EAAC,KAAK,EAAG,MAAM,EAAC,iBAAiB,EAAE,aAAa,EAAE,IAAI,GAAE,UAAU,GAAG,SAAS,GAAG,OAAO,GAAE,MAAM,CAAC,IAAI,GAAG,SAAS,GAAE,MAAM,CAAC,IAAI,GAAE,QAAQ,EAAE,CAAC;QAChK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,EAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAG,WAAW,CAAC,CAAC,IAAI,CAClF,0DAAG,CAAC,WAAC;YACH,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAEjD,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,eAAe,CAAC,CAAC,CACnD,CAAC;IACJ,CAAC;IAED,gCAAU,GAAV;QACC,IAAI,GAAG,GAAG,EAAE,SAAS,EAAC,KAAK,EAAG,MAAM,EAAC,iBAAiB,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC;QAC/E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,EAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAG,WAAW,CAAC,CAAC,IAAI,CAClF,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAA5B,CAA4B,CAAC,EACtC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAChD,CAAC;IAEJ,CAAC;IAED,qCAAe,GAAf,UAAiB,IAAI,EAAE,IAAI,EAAE,EAAE;QAC7B,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,QAAQ,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,CACjF,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,uBAAqB,IAAM,CAAC,EAAxC,CAAwC,CAAC,EAClD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,eAAe,CAAC,CAAC,CACnD,CAAC;IACJ,CAAC;IAGD,kCAAY,GAAZ,UAAa,IAAI,EAAE,EAAE,EAAE,MAAM;QAC3B,OAAO,CAAC,GAAG,CAAE,kCAAkC,EAAE,IAAI,CAAC,CAAC;QAEvD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,sBAAsB,EAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAC3F,0DAAG,CAAC,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,EAAvC,CAAuC,CAAC,EACvD,iEAAU,CAAE,UAAC,GAAQ;YACnB,MAAM,CAAC,uDAAU,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAE,CAAC,CAAC;IACX,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAI,EAAE,EAAE;QACnB,OAAO,CAAC,GAAG,CAAE,kCAAkC,EAAE,IAAI,CAAC,CAAC;QAEvD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,qCAAqC,EAAG,WAAW,CAAC,CAAC,IAAI,CACpF,0DAAG,CAAC,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,EAAzC,CAAyC,CAAC,EACzD,iEAAU,CAAE,UAAC,GAAQ;YACnB,MAAM,CAAC,uDAAU,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAE,CAAC,CAAC;IACX,CAAC;IAKD,iCAAW,GAAX,UAAgB,SAAuB,EAAE,MAAU;QAAnC,mDAAuB;QACrC,MAAM,CAAC,UAAC,KAAU;YAEhB,wDAAwD;YACxD,iDAAiD;YAEjD,8DAA8D;YAC9D,OAAO,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,KAAK,CAAC,OAAS,CAAC,CAAC;YAG3D,yDAAyD;YACzD,MAAM,CAAC,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IA/MU,WAAW;QALvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAFzB,WAAW,CAgNvB;IAAD,kBAAC;CAAA;AAhNuB;;;;;;;;;;;;;;;;;;;;;;;;;AC9BxB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Title }     from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Big-IP Data-Group management';\n  public constructor(private titleService: Title ) { }\n\n  ngOnInit() {\n  \tthis.setTitle(\"F5 DG Manager\");\n  }\n\n  public setTitle( newTitle: string) {\n    this.titleService.setTitle( newTitle );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ProductComponent } from './product/product.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { RecordsComponent } from './records/records.component';\nimport { RecordDetailsComponent } from './record-details/record-details.component';\nimport { MatFormFieldModule} from '@angular/material';\nimport { MatTableModule } from '@angular/material' ;\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DevicesComponent } from './devices/devices.component';\nimport { GetgrpbyURLComponent } from './getgrpby-url/getgrpby-url.component'; \nimport {MatSelectModule} from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\nconst appRoutes: Routes = [\n  {\n    path: 'products/:id1/:id2',\n    component: ProductComponent,\n    data: { title: 'Product List' }\n  },\n  {\n    path: 'product-details/:id',\n    component: ProductDetailComponent,\n    data: { title: 'Group Details' }\n  },\n  {\n    path: 'product-add/:id',\n    component: ProductAddComponent,\n    data: { title: 'Group Add' }\n  },\n  {\n    path: 'records/:id',\n    component: RecordsComponent,\n    data: { title: 'Group Records' }\n  },\n  {\n    path: 'product-edit/:id',\n    component: ProductEditComponent,\n    data: { title: 'Group Edit' }\n  },\n  {\n    path: 'record-details/:id1/:id2/:id3/:id4',\n    component: RecordDetailsComponent,\n    data: { title: 'Record Add/Edit' }\n  },\n  {\n    path: 'devices',\n    component: DevicesComponent,\n    data: { title: 'Device List' }\n  },\n  { \n    path: '',\n    redirectTo: '/devices',\n    pathMatch: 'full'\n  },\n  { \n    path: 'getgrpbyurl',\n    component: GetgrpbyURLComponent,\n    data: { title: 'Download Group Data by URL' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent,\n    ProductDetailComponent,\n    ProductEditComponent,\n    ProductAddComponent,\n    RecordsComponent,\n    RecordDetailsComponent,\n    DevicesComponent,\n    GetgrpbyURLComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatButtonModule,\n    BrowserAnimationsModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataService {\n\n  private messageSource = new BehaviorSubject('No Changes');\n  currentMessage = this.messageSource.asObservable();\n\n  private saveState = new BehaviorSubject('Not Saved');\n  save_results  = this.messageSource.asObservable();\n\n  /* Current data group edited */\n  private groupData = new BehaviorSubject({});\n  private grpSource = new BehaviorSubject('BigIP');\n  \n  /* List of devices for presenting choices*/\n  devList = new BehaviorSubject({});\n  currentDeviceList = this.devList.asObservable();\n\n  /* map of all device name to hostname */\n  devHostnames = new BehaviorSubject({});\n  allDeviceHostnames = this.devHostnames.asObservable();\n\n  /* Results of the records save operation */\n  grp_results = this.groupData.asObservable();\n  grp_source = this.grpSource.asObservable();\n\n  devAuth= new BehaviorSubject({});\n  curDevAuth = this.devAuth.asObservable();\n\n  /* address of BigIP currently getting records from */\n  private destAddress = new BehaviorSubject('');\n  devAddress =this.destAddress.asObservable();\n\n\n  constructor() { }\n\n  changeMessage(message: string) {\n    this.messageSource.next(message)\n  }\n\n  setSaveResults(message: string) {\n  \tthis.saveState.next(message)\n  }\n\n  setGrpData(grp: any) {\n  \tthis.groupData.next(grp)\n  }\n\n  /* address of BigIP currently getting records from */\n  setDestAddress(dest) {\n  \tthis.destAddress.next(dest)\n  }\n   setGrpSource(src: string) {\n \t this.grpSource.next(src)\n   }\n\n  /* List of devices for presenting choice, can be variabl*/\n   deviceList(dev) {\n   \t  this.devList.next(dev)\n   }\n\n   /* hostnameList is the map of hostname to device name */\n   setHostnameList(list) {\n   \t\tthis.devHostnames.next(list);\n   }\n\n   setAuth(s1) {\n   \t\tthis.devAuth.next(s1);\n   }\n\n}\n\n","module.exports = \"/* Products Component's private CSS styles */\\n.products {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 20em;\\n}\\n.products li {\\n  position: relative;\\n  cursor: pointer;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n   width: 40em;\\n}\\n.products li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.products a {\\n\\n  color: #888;\\n  text-decoration: none;\\n  position: relative;\\n  display: block;\\n  width: 250px;\\n   width: 25em;\\n}\\n.products a:hover {\\n  color:#607D8B;\\n}\\n.products ab {\\n  \\n  color: #888;\\n  text-decoration: none;\\n  position: relative;\\n  display: inline-block;\\n  width: 50px;\\n   width: 25em;\\n}\\n.products .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  min-width: 16px;\\n  text-align: right;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\n.products .type {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607DBB;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  min-width: 16px;\\n  text-align: left;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\nbutton {\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n  font-family: Arial;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton.delete {\\n  position: relative;\\n  left: 650px;\\n  top: -32px;\\n  background-color: gray !important;\\n  color: white;\\n}\\n\"","module.exports = \"<h2>Import Data Groups</h2>\\n\\n<div>\\n  <button mat-raised-button routerLink=\\\"/getgrpbyurl/\\\">\\n    Download Data group by URL\\n  </button>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\n  <button mat-raised-button (click)=\\\"importFromFile=true;\\\">\\n    Import from local file\\n  </button>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\n  <button mat-raised-button (click)=\\\"addGroup=true;\\\" >\\n    Create New Group\\n  </button>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\n  <button *ngIf=\\\"(groupname!='')\\\" mat-raised-button (click)=\\\"editCurrent()\\\" >\\n    Edit Current Group\\n  </button>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\n  <button mat-raised-button (click)=\\\"openDevicesPanel()\\\" >\\n    List Devices\\n  </button>\\n  <p>\\n\\n  <div *ngIf=\\\"(importFromFile)\\\">\\n    <label>File:\\n        <input type=\\\"file\\\" (change)=\\\"onChange($event.target.files)\\\">\\n    </label><br>\\n\\n  <p>\\n  </div>\\n\\n\\n  <div *ngIf=\\\"(addGroup)\\\">\\n    <label>Create new group on this client:</label><br>\\n    <label>Name:\\n    <input [(ngModel)]=\\\"groupData.name\\\" placeholder=\\\"Data-Group Name\\\"/>\\n    </label><br>\\n    <label>Type (string, number, IP address):\\n    <input [(ngModel)]=\\\"groupData.type\\\" placeholder=\\\"Data-Group Type\\\"/>\\n    </label><br>\\n      <button (click)=\\\"addNewGroup()\\\">Create</button>\\n  </div>\\n\\n\\n<div *ngIf=\\\"openDevPanel\\\">\\n<h2>{{title}}</h2>\\n\\n<ul class=\\\"products\\\">\\n  <li *ngFor=\\\"let device of device_list; let i=index;\\\">\\n    <div routerLink=\\\"/products/{{device.name}}/{{device.address}}/\\\">\\n      <span class=\\\"badge\\\">{{i+1}}</span> <span style=\\\"  display: inline-block; width:220px\\\">{{device.name}}</span>&nbsp;\\n       <span class=\\\"type\\\">{{device.type}}</span><span style=\\\"  display: inline-block; width:270px\\\">{{device.address}}</span>\\n    </div>\\n    <div>   \\n    <button class=\\\"delete\\\" title=\\\"Get Data-Groups\\\"\\n      (click)=\\\"get_dgs(device.name, device.address)\\\">Get DGs</button>\\n      &nbsp;\\n\\n        <button class=\\\"delete\\\" title=\\\"Upload Scripts\\\" (click)=\\\"upload_scripts(i, device.address)\\\">Upload DG Scripts</button>\\n      &nbsp;<button class=\\\"delete\\\" *ngIf=\\\"(device_list[i].scriptUploadStatus!=undefined)\\\">{{device_list[i].scriptUploadStatus}}</button>\\n\\n    </div>\\n  </li>\\n</ul>\\n      <button class=\\\"delete\\\" title=\\\"Push to all\\\"\\n      (click)=\\\"upload_scripts(device.address)\\\">Push script to all</button>\\n      &nbsp;\\n\\n      <button class=\\\"delete\\\" title=\\\"Clear Panel\\\"\\n      (click)=\\\"openDevPanel=false\\\">Clear Panel</button>\\n      &nbsp;\\n</div>\\n\\n\\n<div>\\n<h2>{{gptitle}}</h2>\\n\\n<ul class=\\\"products\\\">\\n  <li *ngFor=\\\"let grp of dataGroups; let i=index;\\\">\\n    <div (click)=\\\"records(i)\\\">\\n      <span class=\\\"badge\\\">{{i+1}}</span> <span style=\\\"  display: inline-block; width:220px\\\">{{grp.name}}</span> &nbsp;\\n      <span class=\\\"type\\\"> Master </span><span style=\\\"  display: inline-block; width:270px\\\">{{grp.master}}</span>\\n    </div>\\n          &nbsp;\\n        <button class=\\\"delete\\\" title=\\\"Compute MD5 hash of master\\\"\\n      (click)=\\\"masterMD5Hash(i)\\\">Compare groups to Master</button>\\n          &nbsp;\\n    <button *ngIf=\\\"(group_missing_on_master[i])\\\" class=\\\"delete\\\" title=\\\"Add Group to master\\\"\\n      (click)=\\\"addGrpToMaster(i)\\\">Click to add starter group to master</button>\\n      &nbsp;\\n\\n\\n\\n    </li>\\n</ul>\\n\\n\\n</div>\"","import { Component, OnInit , Input} from '@angular/core';\n//import devices from '../../assets/devices.json';\n//import groups from '../../datagroups.json';\nimport script from '../../assets/dg_script_ready_for_POST.json';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from \"../data.service\";\nimport  MD5 from 'crypto-js/md5';\n//import * as CryptoJS from 'crypto-js';\n\n\n@Component({\n  selector: 'app-devices',\n  templateUrl: './devices.component.html',\n  styleUrls: ['./devices.component.css']\n})\nexport class DevicesComponent implements OnInit {\n  @Input() grpData = { filename:'' };\n  @Input() groupData = { \n  \t\t\t\t\t\tname:'', \n  \t\t\t\t\t\ttype: '', \n  \t\t\t\t\t\tsource: 'Direct Input', \n  \t\t\t\t\t\tpartition: 'Common' ,\n  \t\t\t\t\t\tdesc: 'User direct input' ,\n  \t\t\t\t\t\trecords: []\n  \t\t\t\t\t};\n\n\n  constructor(private route: ActivatedRoute, private router: Router, private data: DataService, public rest:RestService) { }\n\n  openDevPanel:boolean = false;\n  results:any = {};\n  // device_list is for presentiong choices.  It can be only the related devices or all the devices, depending on operation.\n  device_list: any = [];\n  // device_hostnames is all the devices.\n  device_hostnames:any=[];\n  dataGroups:any = [];\n  groups:any = [];\n  fileContent: string = '';\n  groupname: string = '';\n  addGroup:boolean = false;\n  group_missing_on_master:any = [];\n  relatedDevices:any = [];\n  groupMaster:string ='';\n  s1:string='';\n\n  title = 'Device List from local JSON file';\n  gptitle = 'Data Group List'\n  importFromFile:boolean = false;\n\n  ngOnInit() {\n  \t  this.downloadDGList(\"datagroups.json\");\n\t  this.downloadDevicesList(\"devices.json\");\n\t  this.data.setHostnameList(this.device_hostnames);\n\t  //this.downloadAuth(\"dgapp1.json\");\n   \t  this.data.setAuth(this.s1);\n\n\t  \n  \t  //this.data.deviceList(devices);\n  \t  this.data.grp_results.subscribe(results => {\n      \tthis.results = results;\n\n      })\n      if (typeof this.results.name != 'undefined') {\n\t      this.groupname=this.results.name;\n       }\n  }\n\n  get_dgs(name, addr) {\n   this.router.navigate(['/products/', name, addr]);\n  }\n\n  get_pools() {\n    console.log ('Get pools');\n  }\n\n  upload_scripts(i, dest) {\n    console.log ('Upload scripts started');\n    // Remove the script first to allow for updates.  \n    // POST over existing script does not work.\n    this.rest.deleteScript(dest, this.s1).subscribe((results:any) => {\n\t      \tconsole.log('Script Deleted.');\n\t\t\tthis.device_list[i].scriptUploadStatus=\"Script Delete Successful.\";\n\n\t    this.rest.uploadScript(dest, this.s1, script).subscribe(results => {\n\t      \tconsole.log('Script uploaded.');\n\t\t\tthis.device_list[i].scriptUploadStatus=\"Script upload Successful.\";\n\t      }, (err) => {\n\t      \tthis.device_list[i].scriptUploadStatus=\"Script upload failed.\";\n\t      \tconsole.log(err.message.message);\n\t    });\n\n    }, \n    (err) => {\n\t      \tthis.device_list[i].scriptUploadStatus=\"Script delete failed.\";\n\t      \tconsole.log('Script delete fail:', err.message.message);\n\n\t\t    this.rest.uploadScript(dest, this.s1, script).subscribe(results => {\n\t\t      \tconsole.log('Script uploaded.');\n\t\t\t\tthis.device_list[i].scriptUploadStatus=\"Script upload Successful.\";\n\t\t      }, (err) => {\n\t\t      \tthis.device_list[i].scriptUploadStatus=\"Script upload failed.\";\n\t\t      \tconsole.log(err.message.message);\n\t\t    });\n\t }\n\n    );\n\n  }\n\n  editCurrent() {\n\t  this.router.navigate(['/records/', this.groupname]);\n  }\n\n  addNewGroup() {\n      \t  this.data.setGrpData(this.groupData);\n      \t  this.data.setGrpSource('Direct Input');\n      \t  this.data.setSaveResults('Not Saved');\n          this.router.navigate(['/records/'+this.groupData.name]);\n  }\n\n  openDevicesPanel() {\n  \tthis.openDevPanel=!this.openDevPanel;\n  \t//this.downloadDevicesList('devices.json');\n  }\n\n\n  openRecordsPanel(i, grp, dest) {\n\n    this.rest.getProduct(grp, dest, this.s1).subscribe((group: any) => {\n      //recs=data; From master\n      //console.log('Received data-group from master: ' , group);\n      //group.master=this.groupMaster;\n      //group.devices=this.relatedDevices;\n      //group.source='BigIP';\n   \t  this.data.setGrpData(group);\n   \t  this.data.setGrpSource('BigIP');\n \t  this.data.deviceList(this.dataGroups[i].devices);\n      this.group_missing_on_master[i]=true;\n      this.dataGroups[i].exists = 'yes';\n\t  this.router.navigate(['/records/'+ this.dataGroups[i].name]);\n\n      //console.log('***',this.group);\n    }, (err) => {\n          this.group_missing_on_master[i]=true;\n          console.log('Open panel Get Records: ', err.error.message);\n        }\n    );\n  }\n\n\n  records(i) {\n  \tthis.data.setDestAddress(this.dataGroups[i].master);\n  \tthis.groupMaster = this.dataGroups[i].master;\n  \tthis.relatedDevices = this.dataGroups[i].devices;\n  \tthis.data.deviceList(this.dataGroups[i].devices);\n    this.data.setGrpSource('BigIP');\n    this.openRecordsPanel(i ,this.dataGroups[i].name, this.dataGroups[i].master);\n  }\n\n\n\n  addGrpToMaster(i) {\n  \tthis.rest.addDataGroup(this.dataGroups[i], this.dataGroups[i].master, this.s1).subscribe((result) => {\n      this.group_missing_on_master[i]=false;\n    }, (err) => {\n      console.log(err);\n    });\n\n  }\n\n\n  onChange(fileList: FileList) {\n    let file = fileList[0];\n    let fileReader: FileReader = new FileReader();\n    let self = this;\n    fileReader.onloadend = (x) => {\n      self.fileContent = fileReader.result;\n      let res = JSON.parse(self.fileContent);\n          res.source=file.name;\n      \t  this.data.setGrpData(res);\n      \t  this.data.setGrpSource(file.name);\n          this.router.navigate(['/records/'+res.name]);\n    }\n    fileReader.readAsText(file);\n  }\n\n  downloadAuth(url) {\n \n    this.rest.getgrpFromURL('/'+url, url)\n        .subscribe(res => {\n          this.s1=res[0].text;\n    \t  this.data.setAuth(this.s1);\n        }, (err) => {\n          console.log('Unable to get auth information. ',err);\n          this.s1='';\n        }\n      );        \n  }\n\n\n  downloadDGList(url) {\n \n    this.rest.getgrpFromURL('/'+url, url)\n      .subscribe(res => {\n      \t\tthis.groups=res;\n  \t  \t\tthis.dataGroups=this.groups;\n  \t        //console.log('dldDG: ' , this.dataGroups);\n\n        }, (err) => {\n          console.log(err);\n          this.groups=[];\n        }\n      );\n\n  }\n\n  downloadDevicesList(url) {\n \n    this.rest.getgrpFromURL('/'+url, url)\n      .subscribe(res => {\n      \t\tthis.device_list=res;\n      \t\tfor (var x in this.device_list) {\n      \t\t\tthis.device_list[x].type='BigIP',\n      \t\t\tthis.device_list[x].address=this.device_list[x].connections[0];\n      \t\t\tthis.device_hostnames[this.device_list[x].name]=this.device_list[x].address ;\n      \t\t\t//console.log('dev array:', x, this.device_list[x].name ,this.device_hostnames[this.device_list[x].name]);\n      \t\t}\n\n\n        }, (err) => {\n          console.log(err);\n        }\n      );\n\n  }\n\n  masterMD5Hash(i) {\n  \tlet dest=this.device_hostnames[this.dataGroups[i].master];\n  \tthis.rest.getProduct(this.dataGroups[i].name, dest, this.s1).subscribe((group :any) => {\n\t  \tlet hash = MD5(group.records.toString()).toString();\n\t  \tlet masterHash = hash;\n\t  \tconsole.log ('Master records MD5:', masterHash, this.dataGroups[i].master )\n\n          for (var x in this.dataGroups[i].devices) {\n                dest=this.device_hostnames[this.dataGroups[i].devices[x]];\n                if (dest != undefined) {\n                \t\tlet y=x;\n                \t\tlet dest1=dest;\n\t\t                this.rest.getProduct(this.dataGroups[i].name, dest1, this.s1).subscribe((group :any) => {\n\t\t\t\t\t\t  \thash = MD5(group.records.toString()).toString();\n\t\t\t\t\t\t  \tlet match= (hash===masterHash) ? 'Match with Master' : 'Does **NOT** match Master';\n\t\t\t\t\t\t  \tconsole.info ('Records MD5:', hash, this.dataGroups[i].devices[y] ,dest1, match);\n\t\t                }, (err) => {\n\t\t                  console.log('Error while retrieving Subordinate group records:', this.dataGroups[i].name, dest1, err);\n\t\t                  this.data.changeMessage(err);\n\t\t                });\n\t\t        } else {\n\t\t        \tconsole.error('Hostname not found for:' , this.dataGroups[i].devices[x])\n\t\t        }\n          }\n\n  \t}, (err) => {\n      console.log('Error Getting Master Rrecods for MD5:',dest, '-',this.dataGroups[i].name, err.error.message);\n    }\n\n  \t);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2>Download Data-Group from URL</h2>\\n  <div>\\n    <label>URL:\\n      <input [(ngModel)]=\\\"grpData.URL\\\" placeholder=\\\"URL\\\"\\n      />\\n    </label><br>\\n\\n\\n  </div>\\n  <button (click)=\\\"downloadDG()\\\">Download</button>&nbsp;&nbsp;&nbsp;&nbsp;\\n    <button routerLink=\\\"/devices/\\\">\\n    Back to Data-Group Import page\\n  </button>\\n</div>\"","import { Component, OnInit , Input} from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from \"../data.service\";\n\n\n@Component({\n  selector: 'app-getgrpby-url',\n  templateUrl: './getgrpby-url.component.html',\n  styleUrls: ['./getgrpby-url.component.css']\n})\nexport class GetgrpbyURLComponent implements OnInit {\n  @Input() grpData = { URL:'' };\n\n  constructor(public rest:RestService, private route: ActivatedRoute, private router: Router, private data: DataService ) { }\n\n  results:any = {};\n  ngOnInit() {\n      this.data.grp_results.subscribe(results => this.results = results)\n  }\n\n  downloadDG() {\n    const URL=this.parseURL(this.grpData.URL);\n \n    this.rest.getgrpFromURL('/ext/', this.grpData.URL)\n      .subscribe(res => {\n      \t  res.source='URL';\n      \t  this.data.setGrpData(res);\n      \t  this.data.setGrpSource('URL');\n          this.router.navigate(['/records/'+res.name]);\n        }, (err) => {\n          console.log(err);\n          this.data.changeMessage(err);\n        }\n      );\n\n  }\n\n\t parseURL(url) {\n\t    var parser = document.createElement('a'),\n\t        searchObject = {},\n\t        queries, split, i;\n\t    // Let the browser do the work\n\t    parser.href = url;\n\t    // Convert query string to object\n\t    queries = parser.search.replace(/^\\?/, '').split('&');\n\t    for( i = 0; i < queries.length; i++ ) {\n\t        split = queries[i].split('=');\n\t        searchObject[split[0]] = split[1];\n\t    }\n\t    return {\n\t        protocol: parser.protocol,\n\t        host: parser.host,\n\t        hostname: parser.hostname,\n\t        port: parser.port,\n\t        pathname: parser.pathname,\n\t        search: parser.search,\n\t        searchObject: searchObject,\n\t        hash: parser.hash\n\t    };\n\t}\n\n}\n","module.exports = \"/* Products Component's private CSS styles */\\n.products {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.products li {\\n  position: relative;\\n  cursor: pointer;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.products li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.products a {\\n  color: #888;\\n  text-decoration: none;\\n  position: relative;\\n  display: block;\\n  width: 250px;\\n}\\n.products a:hover {\\n  color:#607D8B;\\n}\\n.products .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  min-width: 16px;\\n  text-align: right;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\nbutton {\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n  font-family: Arial;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton.delete {\\n  position: relative;\\n  left: 194px;\\n  top: -32px;\\n  background-color: gray !important;\\n  color: white;\\n}\\n\"","module.exports = \"<div>\\n  <h2>Add Data-Group</h2>\\n  <div>\\n    <label>Group Name:\\n      <input [(ngModel)]=\\\"groupData.name\\\" placeholder=\\\"Data-Group Name\\\"/>\\n    </label><br>\\n    <label>Group type (string, integer, IP ):\\n      <input [(ngModel)]=\\\"groupData.type\\\" placeholder=\\\"Data-Group type\\\"/>\\n    </label><br>\\n    <label>Group Partition (default=Common):\\n      <input [(ngModel)]=\\\"groupData.partition\\\" placeholder=\\\"Data-Group Partition\\\"/>\\n    </label><br>\\n    <label>Group Description (Optional):\\n      <input [(ngModel)]=\\\"groupData.desc\\\" placeholder=\\\"Data-Group Description\\\"/>\\n    </label><br>\\n\\n  </div>\\n  <button (click)=\\\"addGroup()\\\">Save</button>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from \"../data.service\";\n\n\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css']\n})\n\nexport class ProductAddComponent implements OnInit {\ns1:any='';\n  @Input() groupData = { name:'', type: '', desc: '', partition: '' };\n\n  constructor(public rest:RestService, private route: ActivatedRoute, private router: Router, private data: DataService) { }\n\n  ngOnInit() {\n    this.data.curDevAuth.subscribe(s1 => this.s1 = s1);\n  }\n\n  addGroup() {\n    this.rest.addDataGroup(this.groupData, this.route.snapshot.params['id'],this.s1).subscribe((result) => {\n      this.router.navigate(['/products']);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n}\n","module.exports = \"/* Products Component's private CSS styles */\\n.products {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.products li {\\n  position: relative;\\n  cursor: pointer;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.products li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.products a {\\n  color: #888;\\n  text-decoration: none;\\n  position: relative;\\n  display: block;\\n  width: 250px;\\n}\\n.products a:hover {\\n  color:#607D8B;\\n}\\n.products .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  min-width: 16px;\\n  text-align: right;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\nbutton {\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n  font-family: Arial;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton.delete {\\n  position: relative;\\n  left: 194px;\\n  top: -32px;\\n  background-color: gray !important;\\n  color: white;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"group\\\" class=\\\"products\\\">\\n  <h2>{{group.name | uppercase}} Data-group Details</h2>\\n  <!-- <div><span>Description: </span>{{group.desc}}</div> !-->\\n  <div><span>Type:        </span>{{group.type}}</div>\\n  <!--<div><span>Update Date: </span>{{product.updated_at | date}}</div> !-->\\n  <div>\\n    <button routerLink=\\\"/product-edit/{{group.name}}\\\">\\n      Edit\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  group:any;\n\n  constructor(public rest:RestService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.rest.getProduct(this.route.snapshot.params['id'], '', '').subscribe((data: {}) => {\n      console.log(data);\n      this.group = data;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2>Big-IP Data-Group Edit</h2>\\n  <div>\\n    <label>Group Name:\\n      <input [(ngModel)]=\\\"productData.prod_name\\\" placeholder=\\\"Group Name\\\"/>\\n    </label><br>\\n    <label>Group Type:\\n      <input [(ngModel)]=\\\"productData.prod_desc\\\" placeholder=\\\"Group Type\\\"/>\\n    </label><br>\\n \\n  </div>\\n  <button (click)=\\\"updateProduct()\\\">Update</button>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit {\n\n  @Input() productData:any = { prod_name: '', prod_desc: '', prod_price:0 };\n\n  constructor(public rest:RestService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.rest.getProduct(this.route.snapshot.params['id'], '', '').subscribe((data: {}) => {\n      console.log(data);\n      this.productData = data;\n    });\n  }\n\n  updateProduct() {\n    this.rest.updateProduct(this.route.snapshot.params['id'], this.productData).subscribe((result) => {\n      this.router.navigate(['/product-details/'+result._id]);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n}\n","module.exports = \"/* Products Component's private CSS styles */\\n.products {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 20em;\\n}\\n.products li {\\n  position: relative;\\n  cursor: pointer;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n   width: 20em;\\n}\\n.products li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.products a {\\n  color: #888;\\n  text-decoration: none;\\n  position: relative;\\n  display: block;\\n  width: 250px;\\n   width: 25em;\\n}\\n.products a:hover {\\n  color:#607D8B;\\n}\\n.products .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  min-width: 16px;\\n  text-align: right;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\nbutton {\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n  font-family: Arial;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton.delete {\\n  position: relative;\\n  left: 330px;\\n  top: -32px;\\n  background-color: gray !important;\\n  color: white;\\n}\\n\"","module.exports = \"<h2>Big-IP Internal Data-Group List</h2>\\n\\n<div>\\n  <button mat-raised-button routerLink=\\\"/devices/\\\">\\n    Back\\n  </button>&nbsp;&nbsp;&nbsp;&nbsp;\\n  \\n  <button mat-raised-button (click)=\\\"add()\\\">\\n    Create New Internal Data-Group\\n  </button>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\n  <button mat-raised-button routerLink=\\\"/getgrpbyurl/\\\">\\n    Download by URL\\n  </button>\\n\\n</div>\\n\\n<ul class=\\\"products\\\">\\n  <li *ngFor=\\\"let p of groups; let i=index;\\\">\\n    <a (click)=\\\"records(p.name)\\\">\\n      <span class=\\\"badge\\\">{{i+1}}</span> {{p.name}}\\n    </a>\\n    <button class=\\\"delete\\\" title=\\\"delete Group\\\"\\n      (click)=\\\"delete(p.name)\\\">x</button>\\n      &nbsp;\\n        <button class=\\\"delete\\\" title=\\\"Edit Group Records\\\"\\n      (click)=\\\"records(p.name)\\\">Records</button>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from \"../data.service\";\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  products:any = [];\n  groups:any = [];\n  name:any = \"\";\n  address:any = \"\";\n  s1:any= \"\";\n\n  constructor(public rest:RestService, private route: ActivatedRoute, private router: Router, private data: DataService) { }\n\n  ngOnInit() {\n    this.name = this.route.snapshot.params['id1'];\n    this.address = this.route.snapshot.params['id2'];\n    this.data.setDestAddress(this.address);\n    this.data.curDevAuth.subscribe(s1 => this.s1 = s1);\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.groups = [];\n    const elmnt = 'ltm/data-group/internal';\n    //this.products = [];\n    this.rest.getProducts(elmnt, this.address, this.s1).subscribe((data: any) => {\n      //console.log(data.items);\n\n      // todo:  data.service should be imported and grpSrc should be set to 'BigIP' here.\n\n      this.products = data;\n      this.groups = data.items;\n    });\n  }\n\n  getGrpfromGithug() {\n    this.router.navigate(['/getgrpfromGithub']);\n  }\n\n  add() {\n    this.router.navigate(['/product-add/'+this.address]);\n  }\n\n   records(groupname) {\n    this.data.setGrpSource('BigIP');\n    this.data.setGrpData({});\n    this.router.navigate(['/records/' + groupname]);\n  }\n\n  delete(name) {\n    this.rest.deleteDataGroup(name, this.address, this.s1)\n      .subscribe(res => {\n          this.getProducts();\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2>Big-IP Data-Group Record Add/Edit</h2>\\n  <div>\\n    \\n      <div *ngIf=\\\"(this.operation=='UPDATE')\\\"><label>Record Name/Key:&nbsp;<input  [(ngModel)]=\\\"recordData.name\\\" placeholder=\\\"Record Name\\\" readonly=\\\"true\\\" /> </label></div>\\n      <div *ngIf=\\\"(this.operation!='UPDATE')\\\"><label>Record Name/Key:&nbsp;<input  [(ngModel)]=\\\"recordData.name\\\" placeholder=\\\"Record Name\\\" /></label></div>\\n    <br>\\n    <label>Record Data:\\n      <input [(ngModel)]=\\\"recordData.data\\\" placeholder=\\\"Record Data\\\"/>\\n    </label><br>\\n \\n  </div>\\n  <p>\\n  <button (click)=\\\"update()\\\">{{this.operation}}</button>\\n  &nbsp;\\n  <button *ngIf=\\\"(this.operation=='UPDATE')\\\"    (click)=\\\"delete(group,recordData.name)\\\">Delete</button>\\n  &nbsp;\\n  <button *ngIf=\\\"(this.operation=='ADD')\\\"    (click)=\\\"update('repeat')\\\">Save and add another</button>\\n  &nbsp;\\n  <button (click)=\\\"cancel()\\\">Cancel</button>\\n</div>\\n\\n<div *ngIf=\\\"(op_result!='')\\\">\\n<p><p>\\n  {{op_result}}\\n<p>\\n  {{save_results}}\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { DataService } from \"../data.service\";\n\n@Component({\n  selector: 'app-record-details',\n  templateUrl: './record-details.component.html',\n  styleUrls: ['./record-details.component.css']\n})\n\n\nexport class RecordDetailsComponent implements OnInit {\n  operation:any='';\n  group:any='';\n  save_results:string='';\n  op_result:string='';\n  s1:any='';\n\n  @Input() recordData:any = { name: '', data: '' };\n\n  constructor(public rest:RestService, private route: ActivatedRoute, private router: Router, private data: DataService ) { }\n\n  ngOnInit() {\n    this.operation = this.route.snapshot.params['id1'];\n    this.group = this.route.snapshot.params['id2'];\n  \tthis.recordData.name = this.route.snapshot.params['id3'];\n  \tthis.recordData.data = this.route.snapshot.params['id4'];\n\n    this.data.currentMessage.subscribe(save_results => this.save_results = save_results)\n  }\n\n  delete(group, name) {\n\n    this.rest.deleteRecord(group, name, ' ' ,this.s1)\n      .subscribe(res => {\n          this.data.changeMessage(\"Updated running config only.\");\n          this.router.navigate(['/records/'+this.group]);\n        }, (err) => {\n          console.log(err);\n          this.data.changeMessage(err);\n        }\n      );\n  }\n\n  cancel() {\n    this.router.navigate(['/records/'+this.group]);\n  }\n\n  update(op) {\n    this.rest.recordOps(this.operation, this.group, this.recordData).subscribe((result) => {\n      this.op_result = this.operation + ' OK';\n      this.data.changeMessage(\"Updated running config only.\");\n      if (op==\"repeat\") {\n        this.recordData.name =  \"\";\n        this.router.navigate(['/record-details/', 'ADD', this.group , '', '']);\n      } else {\n        this.router.navigate(['/records/'+this.group]);\n      }\n    }, (err) => {\n      console.log(err);\n      this.data.changeMessage(err);\n    });\n  }\n\n}\n","module.exports = \"/* Products Component's private CSS styles */\\n.products {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 800em;\\n}\\n.products li {\\n  position: relative;\\n  cursor: pointer;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n   width: 20em;\\n}\\n.products li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.products a {\\n  color: #888;\\n  text-decoration: none;\\n  position: relative;\\n  display: block;\\n  width: 250px;\\n   width: 25em;\\n}\\n.products a:hover {\\n  color:#607D8B;\\n}\\n.products .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: 10px;\\n  top: -4px;\\n  height: 1.8em;\\n  min-width: 25px;\\n  text-align: right;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\nbutton {\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n  font-family: Arial;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton.delete {\\n  position: relative;\\n  left: 330px;\\n  top: -32px;\\n  background-color: gray !important;\\n  color: white;\\n}\\ntable {\\n  width: 80%;\\n}\\n.mat-form-field {\\n  font-size: 15px;\\n  width: 100%;\\n}\\n.mat-select-content{\\n    width:450px;\\n    background-color: lightgrey;\\n    font-size: 13px;\\n}\\ntd, th {\\n  width: 25%;\\n}\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: #00FF7F;\\n}\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef;\\n}\\n.example-element-row td {\\n  border-bottom-width: 0;\\n}\\n/* =========================================*/\\n.dgPushStatus-container {\\n  display: inline;\\n  height: 400px;\\n  width: 550px;\\n  overflow: auto;\\n  width: 50%;\\n}\\ntable {\\n  width: 800px;\\n}\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px;\\n}\\nth.mat-column-position, td.mat-column-position {\\n  padding-left: 8px;\\n}\\n.mat-table-sticky:first-child {\\n  border-right: 1px solid #e0e0e0;\\n}\\n.mat-table-sticky:last-child {\\n  border-left: 1px solid #e0e0e0;\\n}\\n\"","module.exports = \"\\n<div *ngIf=\\\"group\\\" >\\n<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button (click)=\\\"recOps(0,group.name, '', '', 'ADD')\\\"> Add Record </button>&nbsp;&nbsp;\\n      <span *ngIf=\\\"(grpSrc=='BigIP')\\\"><button mat-raised-button (click)=\\\"inMemRecOps(0 ,'','','','save')\\\"> SAVE </button>&nbsp;&nbsp;</span>\\n      <button mat-raised-button (click)=\\\"gotoDGList()\\\"> Back to DG List</button>&nbsp;&nbsp;\\n      <button mat-raised-button (click)=\\\"pushToOtherBigIPs()\\\"> Push to Other Devices </button>&nbsp;&nbsp;\\n      <span style=\\\"color: yellow\\\">{{ save_results }}</span>&nbsp;&nbsp;\\n      <span>Source: </span>&nbsp;<span style=\\\"color: orange\\\">{{ grpSrc }}</span>&nbsp;&nbsp;\\n\\n    </div>\\n    <span class=\\\"spacer\\\"></span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n</div>\\n\\n<!-- \\n<div *ngIf=\\\"group\\\" class=\\\"products\\\"> \\n\\n \\n   <div>\\n     <button (click)=\\\"add(group.name)\\\">\\n       Add New Record\\n     </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n     <button routerLink=\\\"/devices\\\">\\n       Back to Data-Group Import\\n     </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n     <button *ngIf=\\\"(grpSrc=='BigIP')\\\" (click)=\\\"save()\\\">\\n       SAVE\\n     </button>&nbsp;\\n     {{ save_results }}&nbsp;&nbsp;&nbsp;&nbsp;\\n     <button (click)=\\\"pushToOtherBigIPs()\\\">\\n       Push to other Devicess\\n     </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n     Source: {{ grpSrc }}\\n   </div>\\n </div>\\n-->\\n\\n\\n   <div *ngIf=\\\"(deviceSlct)\\\">\\n   <p>\\n    <mat-form-field style=\\\"width:400px;\\\">\\n     <mat-label>Devices to receive Data-Group</mat-label>\\n     <mat-select #mySelect multiple (selectionChange)=\\\"getSelectedDevices($event)\\\">\\n       <mat-option *ngFor=\\\"let dev of deviceSelect\\\" [value]=\\\"dev\\\">{{dev}}</mat-option>\\n       </mat-select>      \\n\\n      </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n      <button style=\\\"display: inline;\\\" mat-raised-button *ngIf=\\\"(selectionMade)\\\" (click)=\\\"startPush(selected)\\\">   GO   </button>\\n      <button style=\\\"display: inline;\\\" mat-raised-button (click)=\\\"deviceSlct=false\\\">   Clear   </button>\\n   </div>\\n \\n\\n\\n\\n<div style=\\\"width: 50%\\\" *ngIf=\\\"(dgPushStatus.length!=0)\\\" class=\\\"dgPusStatus-container mat-elevation-z8\\\">\\n  <table style=\\\"width: 100%\\\" mat-table [dataSource]=\\\"pushStatusDataSource\\\">\\n\\n    <!-- Name Column \\n    <ng-container matColumnDef=\\\"label\\\" sticky>\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n    </ng-container>-->\\n\\n    <!-- Device Name Column -->\\n    <ng-container matColumnDef=\\\"dest\\\">\\n      <th mat-header-cell *matHeaderCellDef> Device Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dest}} </td>\\n    </ng-container>\\n\\n    <!-- Results Column -->\\n    <ng-container matColumnDef=\\\"status\\\">\\n      <th mat-header-cell *matHeaderCellDef> Status </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"statusDisplayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: statusDisplayedColumns;\\\"></tr>\\n  </table>\\n        <button style=\\\"display: inline;\\\" mat-raised-button (click)=\\\"dgPushStatus=[]\\\">   Clear   </button>\\n</div>\\n\\n\\n\\n<div *ngIf=\\\"recOperation!=''\\\">\\n  <h2>Big-IP Data-Group Record Add/Edit</h2>\\n  <div>\\n\\n<div *ngIf=\\\"(this.recOperation=='UPDATE')\\\"><label>Record Name/Key:&nbsp;<input  [(ngModel)]=\\\"recordData.name\\\" placeholder=\\\"Record Name\\\" readonly=\\\"true\\\" /> </label></div>\\n      <div *ngIf=\\\"(this.recOperation!='UPDATE')\\\"><label>Record Name/Key:&nbsp;<input  [(ngModel)]=\\\"recordData.name\\\" placeholder=\\\"Record Name\\\" /></label></div>\\n<!--\\n    <label>Record Name/Key:\\n      <input [(ngModel)]=\\\"recordData.name\\\" placeholder=\\\"Record Name/Key\\\" readonly=\\\"(recOperation=='UPDATE')\\\" />\\n    </label>\\n-->\\n\\n    <br>\\n    <label>Record Data:&nbsp;\\n      <input [(ngModel)]=\\\"recordData.data\\\" placeholder=\\\"Record Data\\\"/>\\n    </label><br>\\n   </div>\\n  <p>\\n  <button (click)=\\\"inMemRecOps(recordData.index, group.name , recordData.name, recordData.data, recOperation)\\\">Save</button>\\n  &nbsp;\\n  <button *ngIf=\\\"(recOperation=='UPDATE')\\\"    (click)=\\\"inMemRecOps(recordData.index, group.name, recordData.name, recordData.data , 'DELETE')\\\">Delete</button>\\n  &nbsp;\\n  <button *ngIf=\\\"(recOperation=='ADD')\\\"    (click)=\\\"inMemRecOps(recordData.index, group.name , recordData.name, recordData.data ,'REPEAT')\\\">Save and add another</button>\\n  &nbsp;\\n  <button (click)=\\\"this.recOperation='';\\\">Cancel</button>\\n\\n\\n<div *ngIf=\\\"(op_result!='')\\\">\\n  <p><p>\\n    {{op_result}}\\n  <p>\\n    {{save_results}}\\n</div>\\n\\n</div>\\n\\n\\n\\n\\n<h2>{{group.name | uppercase}} Data-group Records</h2>\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\" style=\\\"width: 80%\\\">\\n  <table style=\\\"width: 100%\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- ID Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> \\n\\t    <button (Click)=\\\"delete(group.name,row.name)\\\">\\n    \\t\\t  Delete\\n    \\t</button>\\n\\n      </td>\\n    </ng-container>\\n\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n      <td mat-footer-cell *matFooterCellDef> Add </td>\\n    </ng-container>\\n\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"data\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Data </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.data}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n     <tr mat-row *matRowDef=\\\"let i=index;let row; columns: displayedColumns; \\\"(click)=\\\"recOps(i,group.name,row.name,row.data,'UPDATE')\\\"\\n    class=\\\"example-element-row\\\">\\n    </tr>   \\n<!--    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns; \\\"(click)=\\\"onRowClicked(group.name,row.name,row.data)\\\"\\n    class=\\\"example-element-row\\\">\\n    </tr> -->\\n\\n  </table>\\n \\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\\n\\n\\n\"","import { Component, ViewEncapsulation, OnInit , Input} from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport {ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\nimport { DataService } from \"../data.service\";\n\nexport interface GroupData {\n  id: string;\n  name: string;\n  data: string;\n\n\n}\nexport interface DGPushStatus {\n    dest: string;\n    label: string;\n    status: string;\n    group: string;\n    operation: string;\n}\n\n@Component({\n  selector: 'app-records',\n  templateUrl: './records.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./records.component.css']\n})\n\n\nexport class RecordsComponent implements OnInit {\n\n  @Input() recordData:any = { index: 0, name: '', data: '' };\n\n  group:any=[];\n  save_results:string=\"Not Saved\";  \n\n  displayedColumns: string[] = [ 'name', 'data'];\n  dataSource: MatTableDataSource<GroupData>;\n\n  statusDisplayedColumns = [ 'dest', 'status'];\n  dgPushStatus :DGPushStatus[] = [] ;\n  pushStatusDataSource: DGPushStatus[] ;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n\n  constructor(private http: HttpClient , public rest:RestService, private route: ActivatedRoute, private router: Router, private data: DataService) { }\n\n  results:any = {};\n  deviceList:any = {};\n  grpSrc:string = \"\";\n  deviceSlct:boolean = false;\n  destAddress:string = '';\n  relatedDevices:any = [];\n  masterAddress:string = '';\n  selectionMade:boolean = false;\n  deviceSelect:any = [];\n  selected:any = [];\n  deviceMap:any = {};\n  recOperation:string = \"\";\n  recordKey:string = \"\";\n  recordValue:string = \"\";\n  // device_hostnames is all the devices.\n  device_hostnames:any=[];\n  s1:any='';\n\n  \n\n\n  ngOnInit() {\n\n    //load the list of devices to manage, this can be per data-group or all bigips.\n    // If per group, then it is set by \"devices\" component from data-group record on file.\n    // If all bigips then it is from devices file on record.\n    this.data.currentDeviceList.subscribe(deviceList => this.deviceList = deviceList);\n    this.relatedDevices = this.deviceList;\n    this.data.allDeviceHostnames.subscribe(device_hostnames => this.device_hostnames = device_hostnames);\n\n    //this.downloadAuth(\"dgapp1.json\");    \n    this.data.curDevAuth.subscribe(s1 => this.s1 = s1);\n\n    //load the group records to display on page\n    this.data.grp_results.subscribe(results => {\n      this.results = results;\n    })\n\n    // load the source of the group data URL/BigIP/File etc..\n    this.data.grp_source.subscribe(grpSrc => this.grpSrc = grpSrc );\n\n\n    // load IP address of BigIP currently getting records from, this is the \"master\"\n    this.data.devAddress.subscribe(destAddress => this.destAddress = destAddress );\n    this.masterAddress = this.destAddress;\n\n\n    if (Object.getOwnPropertyNames(this.results).length === 0 ) {\n          //|| this.grpSrc == 'BigIP'\n      var recs = { \"records\": [] } ;\n    \tthis.getRecords();\n      this.grpSrc = 'BigIP';\n      this.data.setGrpSource(this.grpSrc);\n\n    } else {\n      this.data.setGrpSource(this.grpSrc);\n\n      this.group = this.results;\n      //this.group.devices=this.relatedDevices;\n      this.data.setGrpData(this.results);\n      this.dataSource = new MatTableDataSource(this.results.records);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n\n    this.data.currentMessage.subscribe(save_results => this.save_results = save_results)\n\n  }\n\n  downloadAuth(url) {\n \n    this.rest.getgrpFromURL('/'+url, url)\n        .subscribe(res => {\n          this.s1=res[0].text;\n        }, (err) => {\n          console.log('Unable to get auth information. ',err);\n          this.s1='';\n        }\n      );        \n  }\n\n\n  getRecords() {\n\n    this.rest.getProduct(this.route.snapshot.params['id'], this.destAddress, this.s1).subscribe((data: any) => {\n      //recs=data;\n      console.log('Get Records: ' );\n      this.group = data;\n      //this.group.source = 'BigIP';\n      //this.group.devices= this.relatedDevices;\n  \t  this.dataSource = new MatTableDataSource(data.records);\n   \t  this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n      //console.log('***',this.group);\n    }, (err) => {\n          this.save_results=err.error.message;\n          console.log('Get Records: ', err.error.message);\n        }\n    );\n  }\n\n\n  recOps(index ,groupname, key, value, op) {\n    // Called from table record selection.\n      this.recordData.name=key;\n      this.recordData.data=value;\n      this.recordData.index=index;\n    // enables record edit panel\n      this.recOperation = op;\n  }\n\n\n  inMemRecOps(index ,groupname, key, value, op) {\n     console.log('>>> ', index, groupname, key, value, op, this.relatedDevices);\n\n     if (this.grpSrc == 'BigIP' ) {\n       /*   if (op=='ADD') {\n             this.add(groupname);\n           } else if (op=='UPDATE') {\n             this.onRowClicked(groupname, key, value);\n           } else if (op== 'DELETE') {\n              this.delete(groupname, key)\n           } */\n           \n           //console.log('master hostname: ' , master, this.device_hostnames[this.masterAddress]);\n           if (this.device_hostnames[this.masterAddress]!=undefined) {\n               let dest=this.device_hostnames[this.masterAddress];\n               if (op != 'save') {\n                  this.recordOps(op, groupname, this.recordData, dest).subscribe((result) => {\n                      this.data.changeMessage(\"Updated running config only.\");\n                      this.getRecords();\n                      console.log ('Master Device update:', this.masterAddress, dest , 'Other devices: ', this.relatedDevices);\n                      if (op==\"REPEAT\") {\n                          this.recordData.name =  \"\";\n                          this.recOperation='ADD';\n                        //this.router.navigate(['/record-details/', 'ADD', this.group , '', '']);\n                      } else {\n                        //this.router.navigate(['/records/'+this.group]);\n                          this.recOperation=\"\";\n                      }\n                  }, (err) => {\n                      this.dgPushStatus.push({ dest: dest, label: this.masterAddress , group: groupname, status: err, operation: op});\n                      console.log(err);\n                      this.data.changeMessage(err);\n                  });\n              } else {\n                  this.recordOps('save',groupname, this.recordData, dest).subscribe((result) => {\n                      this.data.changeMessage(\"Saved to Permanent Config\");\n                      console.log ('Master Device update:', this.masterAddress, dest);\n                  }, (err) => {\n                      console.log(err);\n                      this.dgPushStatus.push({ dest: dest, label: this.masterAddress, group: \"\", status: err, operation: op});\n                      this.data.changeMessage(err);\n                  });\n              }      \n\n              for (var x in this.relatedDevices) {\n                    let dest=this.device_hostnames[this.relatedDevices[x]];\n                    console.log('Related device:',dest);\n                    if (dest!=undefined) {\n                        this.recordOps(op, groupname, this.recordData, dest).subscribe((result) => {\n                          console.log ('Related Device updated:', dest);\n                        }, (err) => {\n                          console.log(err);\n                          this.dgPushStatus.push({ dest: dest, label: this.relatedDevices[x] , group: groupname, status: err, operation: op});\n                          this.data.changeMessage(err);\n                        });\n                    }\n              }\n          } else {\n            this.dgPushStatus.push({ dest: this.masterAddress, label: this.masterAddress, group: \"\", status: \"Could not find destination hostname\", operation: op});\n            this.data.changeMessage('No hostname for '+ this.masterAddress);\n          }\n\n      } else {\n\n          if (op=='ADD' || op=='REPEAT') {\n              this.group.records.push({\"name\":key, \"data\":value})\n              console.log(this.group);\n              if (op=='REPEAT') {\n                this.recordData.name='';\n                this.recordData.data='';\n                this.recOperation=op;\n              }\n          } else if (op=='UPDATE') {\n              this.group.records[index].data=value;\n              console.log('Added record:', this.group[index]);\n          } else if (op== 'DELETE') {\n              this.group.records.splice(index, index);\n              console.log('Deleted Record:', this.group[index]);\n          }\n      }\n      this.dataSource = new MatTableDataSource(this.group.records);\n  }\n\n  /* \n  recordUpdate(index ,groupname, key, value, op, dest ) {\n\n    this.recordOps(op, groupname, this.recordData, this.masterAddress).subscribe((result) => {\n      //this.op_result = this.operation + ' OK';\n      this.data.changeMessage(\"Updated running config only.\");\n      this.getRecords();\n\n      if (op==\"REPEAT\") {\n        this.recordData.name =  \"\";\n        this.recOperation='ADD';\n        //this.router.navigate(['/record-details/', 'ADD', this.group , '', '']);\n      } else {\n        //this.router.navigate(['/records/'+this.group]);\n        this.recOperation=\"\";\n      }\n\n    }, (err) => {\n      console.log(err);\n      this.data.changeMessage(err);\n    });\n\n  }\n  */\n\n\n  recordOps (operation, groupname, record , dest ): Observable<any> {\n    let oper='';\n    if (operation=='ADD' || operation=='REPEAT') {\n        oper='add';\n    } else if ( operation=='UPDATE') {\n        oper='edit';\n    } else { \n        oper=operation.toLowerCase();\n    }\n\n    let rec:any={};\n    if (operation=='save' || operation=='SAVE') {\n        rec = { \"command\":\"run\" , \"name\":\"/Common/add-rec\", \"utilCmdArgs\": \"save\" };\n    } else {\n        record.data=record.data.replace(/'/g,\"`\");\n        //console.log('data:', record.data);\n        let record_data = (oper == 'delete' || record.data=='') ? \"\\}\\\"\" :  \"{ data \\'\"+ record.data +\"\\'\\}\\}\\\"\"\n\n        rec = { \"command\":\"run\" , \"name\":\"/Common/add-rec\", \"utilCmdArgs\": oper +\"-record \" + groupname + \" \\\"\\{ \"+ record.name + record_data };\n    }\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n    //    'Authorization': 'Basic '+this.s1,\n        'target': dest\n      })\n    };\n    \n    let endpoint=\"/mgmt/tm/cli/script\";\n\n    return this.http.post(endpoint , JSON.stringify(rec) , httpOptions).pipe(\n      tap(_ => {\n        //console.log(operation+\" record id=${record.name}\");\n\n      }),\n      catchError(this.handleError<any>('Failed: ' + rec, groupname, dest))\n    );\n  }\n\n\n\n  add(groupname) {\n      //this.router.navigate(['/record-details/', 'ADD', groupname , '', '']);\n      //this.Operation='ADD'\n  }\n\n  onRowClicked(groupname , recname, recvalue) {\n    this.router.navigate(['/record-details/', 'UPDATE', groupname,  recname, recvalue]);\n  }\n\n  delete(group, name) {\n    this.rest.deleteRecord(group, name, ' ', this.s1)\n      .subscribe(res => {\n          this.getRecords();\n          this.save_results=\"Written to running config only.\";\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  gotoDGList() {\n    if (this.grpSrc == 'BigIP' && this.save_results != 'Saved to Permanent Config') {\n      this.inMemRecOps(0 ,'','','','save');\n    }\n    this.router.navigate(['/devices']);\n  }\n\n /* \n    pushToOtherBigIPs , prepares the selection list.\n      - when editing an existing dat-grou, the selection list is only the subordinates.\n      - when importing a new data-group, the selection list is all Big-IPs.\n    getSelectedDevices, toggles GO button\n    startPush, intiates the transfer.\n\n  */\n \n  pushToOtherBigIPs() {\n    console.log('lists:', this.deviceList, this.device_hostnames);\n      var dev:any = {};\n      this.deviceSelect = [];\n      this.deviceMap = {};\n      this.deviceSlct=true;\n\n\n      if (this.grpSrc == 'BigIP' && this.save_results != 'Saved to Permanent Config') {\n        this.inMemRecOps(0 ,'','','','save');\n        this.deviceSelect = this.deviceList;\n\n      } else {\n        this.deviceList=this.device_hostnames;\n      \n\n\n          for (var x in Object.keys(this.deviceList)) {\n            dev=Object.keys(this.deviceList)[x];\n            //console.log('==', dev, x , Object.keys(this.deviceList)[x]);\n            //if (dev.type=='bigip') {\n               this.deviceSelect.push( dev );\n               //this.deviceMap[dev.address] = dev.name;\n            //}\n          }\n      }\n  }\n\n  getSelectedDevices(event: any) {\n    this.selected = event.value;\n\n    console.log('Selected value -> ', this.selected);\n\n    if (event.value.length == 0 ) {\n      this.selectionMade=false; \n     } else {\n      this.selectionMade=true;\n     }\n  }\n\n  startPush() {\n\n    this.dgPushStatus = [];\n    for (var dev in  this.selected) {\n        //this.rest.addGroup(this.group);\n        let dest=this.device_hostnames[this.selected[dev]];\n        //console.log('Start Push', this.selected[dev], dest);\n        if (dest!=undefined) {\n            this.addGroup(this.group, dest).subscribe((result) => {\n                  console.log('returned Group .');\n                }, (err) => {\n                  console.log(err);\n                });\n\n        } else {\n            this.dgPushStatus.push({ dest: this.selected[dev], label: this.selected[dev], group: '', status: 'Hostname not found', operation: 'add group'});\n        }\n      }\n  }\n  \n\n\n  addGroup (group, dest): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'Basic '+this.s1,\n        'target': dest,\n      })\n    };\n    let grp:any={};\n    grp.name=group.name;\n    grp.type=group.type;\n    grp.partition=group.partition;\n    //grp.description=group.description;\n    grp.records=group.records;\n\n    let datagroup = JSON.stringify(grp);\n    //console.log('** Grp:', dest, datagroup);\n    //datagroup = {\"name\": group.name, \"partition\": \"Common\", \"type\": group.type };\n\n    return this.http.post<any>( '/mgmt/tm/ltm/data-group/internal/', datagroup, httpOptions).pipe(\n      tap((group) => {\n        this.dgPushStatus.push({ dest: dest, label: this.deviceMap[dest], group: group, status: 'OK', operation: 'Push to Big-IPs'});\n        this.pushStatusDataSource = [...this.dgPushStatus];\n        console.log(\"added group w/ id=\", group.name , 'to:', dest, 'Array length:', this.pushStatusDataSource.length, this.pushStatusDataSource[this.pushStatusDataSource.length - 1 ]) ;\n      }),\n      catchError(this.handleError<any>('Push to Big-IPs', group.name, dest))\n    );\n  }\n\n\n  handleError<T> (operation = 'operation', group, dest, result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      //console.error(error.error.message); // log to console instead\n      console.error(error);\n      // TODO: better job of transforming error for user consumption\n      //console.log(dest, `${operation} failed: ${error.message}`);\n\n      this.dgPushStatus.push({ dest: dest, label: this.deviceMap[dest], group: group, status: error.error.message, operation: operation});\n      this.pushStatusDataSource = [...this.dgPushStatus];\n      console.log ('Push Status:', this.pushStatusDataSource);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /*  */\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n\nconst endpoint = '/mgmt/tm/';\nconst partition = '~Common~';\nconst elmnt = 'ltm/data-group/internal/';\nconst cliscript = 'cli/script';\nvar s1 = \"YWRtaW46YWRtaW4=\";\n\n\n//  bigip1  'Authorization': 'Basic YWRtaW46Ym13MjAwMSE=',\n\n//     YWRtaW46YWRtaW4=',\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'Authorization': 'Basic '+s1,\n    'target': ''\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class RestService {\n\n  constructor(private http: HttpClient) {}\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n\n\n  getProducts(elmnt, dest, s1): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        //'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };\n    \n    return this.http.get(endpoint + elmnt , httpOptions).pipe(\n      map(this.extractData));\n  }\n\n  getgrpFromURL(loc, url): Observable<any> {\n    const URLOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'target': url\n      })\n    };\n\n    return this.http.get(loc , URLOptions).pipe(\n      map(this.extractData));\n  }\n\n  getProduct(id, dest, s1): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      //  'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };\n\nconsole.log('http:',httpOptions.headers);\n    return this.http.get(endpoint + elmnt + partition + id, httpOptions).pipe(\n      map(this.extractData),\n      catchError((err: any) => {\n        return throwError(err);\n        })\n      );\n  }\n\n  addDataGroup (group, dest , s1): Observable<any> {\n    \n    let datagroup = {\"name\": group.name, \"partition\": \"Common\", \"type\": group.type, \"description\": group.desc };\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        //'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };\n\n    console.log(endpoint + 'ltm/data-group/' +'internal/', JSON.stringify(datagroup), httpOptions);\n\n    return this.http.post<any>(endpoint + 'ltm/data-group/' + 'internal/', JSON.stringify(datagroup), httpOptions).pipe(\n      tap((group) => console.log(`added group w/ id=${JSON.stringify(group.name)}`)),\n      catchError(this.handleError<any>('addProduct'))\n    );\n  }\n\n  addGroup (group, dest, s1): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        //'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };\n\n    console.log('** Grp:', group);\n    let datagroup = {\"name\": group.name, \"partition\": \"Common\", \"type\": group.type };\n\n    console.log(endpoint + 'data-group/' +'internal/', JSON.stringify(datagroup), httpOptions);\n\n    return this.http.post<any>(endpoint + 'data-group/' + 'internal/', JSON.stringify(datagroup), httpOptions).pipe(\n      tap((group) => console.log(`added group w/ id=${JSON.stringify(group.name)}`)),\n      catchError(this.handleError<any>('addProduct'))\n    );\n  }\n\n\n  \n  updateProduct (id, product): Observable<any> {\n    return this.http.put(endpoint + 'products/' + id, JSON.stringify(product), httpOptions).pipe(\n      tap(_ => console.log(`updated product id=${id}`)),\n      catchError(this.handleError<any>('updateProduct'))\n    );\n  }\n  \n\n  deleteRecord (groupname, recname, dest, s1): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        //'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };    \n    let record = { \"command\":\"run\" , \"name\":\"/Common/add-rec\", \"utilCmdArgs\": \"delete-record \" + groupname + \" \\'\\{ \"+recname+\" \\}\\'\" };\n    return this.http.post(endpoint + cliscript , JSON.stringify(record) , httpOptions).pipe(\n      tap(_ => console.log(`deleted record id=${recname}`)),\n      catchError(this.handleError<any>('deleteProduct'))\n    );\n  }\n\n  recordOps (operation, groupname, record ): Observable<any> {\n    let oper = (operation == 'ADD') ? \"add\" : \"edit\";\n    let rec = { \"command\":\"run\" , \"name\":\"/Common/add-rec\", \"utilCmdArgs\": oper +\"-record \" + groupname + \" \\'\\{\"+ record.name + \"{ data \"+ record.data +\"\\}\\}\\'\" };\n    return this.http.post(endpoint + cliscript , JSON.stringify(rec) , httpOptions).pipe(\n      tap(_ => {\n        console.log(\" Added record id=${record.name}\");\n\n      }),\n      catchError(this.handleError<any>('deleteProduct'))\n    );\n  }\n\n  saveConfig () {\n   let rec = { \"command\":\"run\" , \"name\":\"/Common/add-rec\", \"utilCmdArgs\": \"save\" };\n    return this.http.post(endpoint + cliscript , JSON.stringify(rec) , httpOptions).pipe(\n      tap(_ => console.log(`Config Saved.`)),\n      catchError(this.handleError<any>('saveConfig'))\n    );\n\n  }\n\n  deleteDataGroup (name, dest, s1): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        //'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };\n    return this.http.delete<any>(endpoint + elmnt + partition + name, httpOptions).pipe(\n      tap(_ => console.log(`deleted record id=${name}`)),\n      catchError(this.handleError<any>('deleteProduct'))\n    );\n  }\n\n\n  uploadScript(dest, s1, script) {\n    console.log ('Upload scripts from rest mod to ', dest);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        //'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };\n\n    return this.http.post<any>('/mgmt/tm/cli/script/' , JSON.stringify(script), httpOptions).pipe(\n      tap((group) => console.log('Script uploaded to', dest)),\n      catchError( (err: any) => {\n        return throwError(err);\n        } ));\n  }\n\n  deleteScript(dest, s1): Observable<any> {\n    console.log ('Delete scripts from rest mod to ', dest);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        //'Authorization': 'Basic '+s1,\n        'target': dest\n      })\n    };\n\n    return this.http.delete<any>('/mgmt/tm/cli/script/~Common~add-rec' , httpOptions).pipe(\n      tap((group) => console.log('Script deleted from ', dest)),\n      catchError( (err: any) => {\n        return throwError(err);\n        } ));\n  }\n\n\n\n\n  handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      //console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.error.message}`);\n\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}